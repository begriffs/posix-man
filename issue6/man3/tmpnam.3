.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "TMPNAM" 3 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" tmpnam 
.SH NAME
tmpnam \- create a name for a temporary file
.SH SYNOPSIS
.LP
\fB#include <stdio.h>
.br
.sp
char *tmpnam(char *\fP\fIs\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
The \fItmpnam\fP() function shall generate a string that is a valid
filename and that is not the same as the name of an
existing file. The function is potentially capable of generating {TMP_MAX}
different strings, but any or all of them may already be
in use by existing files and thus not be suitable return values.
.LP
The \fItmpnam\fP() function generates a different string each time
it is called from the same process, up to {TMP_MAX} times.
If it is called more than {TMP_MAX} times, the behavior is implementation-defined.
.LP
The implementation shall behave as if no function defined in this
volume of IEEE\ Std\ 1003.1-2001 calls
\fItmpnam\fP().
.LP
If
the application uses any of the functions guaranteed to be available
if either _POSIX_THREAD_SAFE_FUNCTIONS or _POSIX_THREADS is
defined, the application shall ensure that the \fItmpnam\fP() function
is called with a non-NULL parameter. 
.SH RETURN VALUE
.LP
Upon successful completion, \fItmpnam\fP() shall return a pointer
to a string. If no suitable string can be generated, the
\fItmpnam\fP() function shall return a null pointer.
.LP
If the argument \fIs\fP is a null pointer, \fItmpnam\fP() shall leave
its result in an internal static object and return a
pointer to that object. Subsequent calls to \fItmpnam\fP() may modify
the same object. If the argument \fIs\fP is not a null
pointer, it is presumed to point to an array of at least L_tmpnam
\fBchar\fPs; \fItmpnam\fP() shall write its result in that
array and shall return the argument as its value.
.SH ERRORS
.LP
No errors are defined.
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.SS Generating a Filename
.LP
The following example generates a unique filename and stores it in
the array pointed to by \fIptr\fP.
.sp
.RS
.nf

\fB#include <stdio.h>
\&...
char filename[L_tmpnam+1];
char *ptr;
.sp

ptr = tmpnam(filename);
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
This function only creates filenames. It is the application's responsibility
to create and remove the files.
.LP
Between the time a pathname is created and the file is opened, it
is possible for some other process to create a file with the
same name. Applications may find \fItmpfile\fP() more useful.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfopen\fP(), \fIopen\fP(), \fItempnam\fP(),
\fItmpfile\fP(), \fIunlink\fP(), the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<stdio.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
