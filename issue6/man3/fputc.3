.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "FPUTC" 3 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" fputc 
.SH NAME
fputc \- put a byte on a stream
.SH SYNOPSIS
.LP
\fB#include <stdio.h>
.br
.sp
int fputc(int\fP \fIc\fP\fB, FILE *\fP\fIstream\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
The \fIfputc\fP() function shall write the byte specified by \fIc\fP
(converted to an \fBunsigned char\fP) to the output
stream pointed to by \fIstream\fP, at the position indicated by the
associated file-position indicator for the stream (if
defined), and shall advance the indicator appropriately. If the file
cannot support positioning requests, or if the stream was
opened with append mode, the byte shall be appended to the output
stream.
.LP
The
\fIst_ctime\fP and \fIst_mtime\fP fields of the file shall be marked
for update between the successful execution of
\fIfputc\fP() and the next successful completion of a call to \fIfflush\fP()
or \fIfclose\fP() on the same stream or a call to \fIexit\fP()
or \fIabort\fP(). 
.SH RETURN VALUE
.LP
Upon successful completion, \fIfputc\fP() shall return the value it
has written. Otherwise, it shall return EOF, the error
indicator for the stream shall be set,  and \fIerrno\fP shall be
set to indicate the error. 
.SH ERRORS
.LP
The \fIfputc\fP() function shall fail if either the \fIstream\fP is
unbuffered or the \fIstream\fP's buffer needs to be
flushed, and:
.TP 7
.B EAGAIN
The O_NONBLOCK flag is set for the file descriptor underlying \fIstream\fP
and the process would be delayed in the write
operation. 
.TP 7
.B EBADF
The file descriptor underlying \fIstream\fP is not a valid file descriptor
open for writing. 
.TP 7
.B EFBIG
An
attempt was made to write to a file that exceeds the maximum file
size. 
.TP 7
.B EFBIG
An attempt was made to write to a file that exceeds the process' file
size limit. 
.TP 7
.B EFBIG
The file is a regular file and an attempt was made to write at or
beyond the offset maximum. 
.TP 7
.B EINTR
The write operation was terminated due to the receipt of a signal,
and no data was transferred. 
.TP 7
.B EIO
A
physical I/O error has occurred, or the process is a member of a background
process group attempting to write to its controlling
terminal, TOSTOP is set, the process is neither ignoring nor blocking
SIGTTOU, and the process group of the process is orphaned.
This error may also be returned under implementation-defined conditions.
.TP 7
.B ENOSPC
There was no free space remaining on the device containing the file.
.TP 7
.B EPIPE
An
attempt is made to write to a pipe or FIFO that is not open for reading
by any process. A SIGPIPE signal shall also be sent to the
thread. 
.sp
.LP
The \fIfputc\fP() function may fail if:
.TP 7
.B ENOMEM
Insufficient storage space is available. 
.TP 7
.B ENXIO
A
request was made of a nonexistent device, or the request was outside
the capabilities of the device. 
.sp
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIferror\fP(), \fIfopen\fP(), \fIgetrlimit\fP(), \fIputc\fP(),
\fIputs\fP(), \fIsetbuf\fP(), \fIulimit\fP(), the Base Definitions
volume of
IEEE\ Std\ 1003.1-2001, \fI<stdio.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
