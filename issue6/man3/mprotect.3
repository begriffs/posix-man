.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "MPROTECT" 3 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" mprotect 
.SH NAME
mprotect \- set protection of memory mapping
.SH SYNOPSIS
.LP
\fB#include <sys/mman.h>
.br
.sp
int mprotect(void *\fP\fIaddr\fP\fB, size_t\fP \fIlen\fP\fB, int\fP
\fIprot\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
The \fImprotect\fP() function shall change the access protections
to be that specified by \fIprot\fP for those whole pages
containing any part of the address space of the process starting at
address \fIaddr\fP and continuing for \fIlen\fP bytes. The
parameter \fIprot\fP determines whether read, write, execute, or some
combination of accesses are permitted to the data being
mapped. The \fIprot\fP argument should be either PROT_NONE or the
bitwise-inclusive OR of one or more of PROT_READ, PROT_WRITE,
and PROT_EXEC.
.LP
If an implementation cannot support the combination of access types
specified by \fIprot\fP, the call to \fImprotect\fP()
shall fail.
.LP
An implementation may permit accesses other than those specified by
\fIprot\fP; however, no implementation shall permit a write
to succeed where PROT_WRITE has not been set or shall permit any access
where PROT_NONE alone has been set. Implementations shall
support at least the following values of \fIprot\fP: PROT_NONE, PROT_READ,
PROT_WRITE, and the bitwise-inclusive OR of PROT_READ
and PROT_WRITE. If PROT_WRITE is specified, the application shall
ensure that it has opened the mapped objects in the specified
address range with write permission, unless MAP_PRIVATE was specified
in the original mapping, regardless of whether the file
descriptors used to map the objects have since been closed.
.LP
The implementation shall require that \fIaddr\fP be a multiple of
the page size as returned by \fIsysconf\fP().
.LP
The behavior of this function is unspecified if the mapping was not
established by a call to \fImmap\fP().
.LP
When \fImprotect\fP() fails for reasons other than [EINVAL], the protections
on some of the pages in the range
[\fIaddr\fP,\fIaddr\fP+\fIlen\fP) may have been changed.
.SH RETURN VALUE
.LP
Upon successful completion, \fImprotect\fP() shall return 0; otherwise,
it shall return -1 and set \fIerrno\fP to indicate the
error.
.SH ERRORS
.LP
The \fImprotect\fP() function shall fail if:
.TP 7
.B EACCES
The \fIprot\fP argument specifies a protection that violates the access
permission the process has to the underlying memory
object.
.TP 7
.B EAGAIN
The \fIprot\fP argument specifies PROT_WRITE over a MAP_PRIVATE mapping
and there are insufficient memory resources to reserve
for locking the private page.
.TP 7
.B EINVAL
The \fIaddr\fP argument is not a multiple of the page size as returned
by \fIsysconf\fP().
.TP 7
.B ENOMEM
Addresses in the range [\fIaddr\fP,\fIaddr\fP+\fIlen\fP) are invalid
for the address space of a process, or specify one or
more pages which are not mapped.
.TP 7
.B ENOMEM
The \fIprot\fP argument specifies PROT_WRITE on a MAP_PRIVATE mapping,
and it would require more space than the system is able
to supply for locking the private pages, if required.
.TP 7
.B ENOTSUP
The implementation does not support the combination of accesses requested
in the \fIprot\fP argument.
.sp
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
The [EINVAL] error above is marked EX because it is defined as an
optional error in the POSIX Realtime Extension.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fImmap\fP(), \fIsysconf\fP(), the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<sys/mman.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
