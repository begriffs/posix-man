.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "FWRITE" 3 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" fwrite 
.SH NAME
fwrite \- binary output
.SH SYNOPSIS
.LP
\fB#include <stdio.h>
.br
.sp
size_t fwrite(const void *restrict\fP \fIptr\fP\fB, size_t\fP \fIsize\fP\fB,
size_t\fP \fInitems\fP\fB,
.br
\ \ \ \ \ \  FILE *restrict\fP \fIstream\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
The \fIfwrite\fP() function shall write, from the array pointed to
by \fIptr\fP, up to \fInitems\fP elements whose size is
specified by \fIsize\fP, to the stream pointed to by \fIstream\fP.
For each object, \fIsize\fP calls shall be made to the \fIfputc\fP()
function, taking the values (in order) from an array of \fBunsigned
char\fP
exactly overlaying the object. The file-position indicator for the
stream (if defined) shall be advanced by the number of bytes
successfully written. If an error occurs, the resulting value of the
file-position indicator for the stream is unspecified.
.LP
The
\fIst_ctime\fP and \fIst_mtime\fP fields of the file shall be marked
for update between the successful execution of
\fIfwrite\fP() and the next successful completion of a call to \fIfflush\fP()
or \fIfclose\fP() on the same stream, or a call to \fIexit\fP()
or \fIabort\fP(). 
.SH RETURN VALUE
.LP
The \fIfwrite\fP() function shall return the number of elements successfully
written, which may be less than \fInitems\fP if a
write error is encountered. If \fIsize\fP or \fInitems\fP is 0, \fIfwrite\fP()
shall return 0 and the state of the stream
remains unchanged. Otherwise, if a write error occurs, the error indicator
for the stream shall be set,  and
\fIerrno\fP shall be set to indicate the error. 
.SH ERRORS
.LP
Refer to \fIfputc\fP().
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Because of possible differences in element length and byte ordering,
files written using \fIfwrite\fP() are
application-dependent, and possibly cannot be read using \fIfread\fP()
by a different
application or by the same application on a different processor.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIferror\fP(), \fIfopen\fP(), \fIprintf\fP(),
\fIputc\fP(), \fIputs\fP(), \fIwrite\fP(), the
Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<stdio.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
