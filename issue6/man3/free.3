.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "FREE" 3 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" free 
.SH NAME
free \- free allocated memory
.SH SYNOPSIS
.LP
\fB#include <stdlib.h>
.br
.sp
void free(void *\fP\fIptr\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
The \fIfree\fP() function shall cause the space pointed to by \fIptr\fP
to be deallocated; that is, made available for further
allocation. If \fIptr\fP is a null pointer, no action shall occur.
Otherwise, if the argument does not match a pointer earlier
returned by the \fIcalloc\fP(), \fImalloc\fP(),
\fIposix_memalign\fP(),  \fIrealloc\fP(), or   \fIstrdup\fP()  function,
or if the space has been deallocated by a call to \fIfree\fP() or
\fIrealloc\fP(), the behavior is undefined.
.LP
Any use of a pointer that refers to freed space results in undefined
behavior.
.SH RETURN VALUE
.LP
The \fIfree\fP() function shall not return a value.
.SH ERRORS
.LP
No errors are defined.
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
There is now no requirement for the implementation to support the
inclusion of \fI<malloc.h>\fP.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIcalloc\fP(), \fImalloc\fP(), \fIrealloc\fP(), the Base Definitions
volume of IEEE\ Std\ 1003.1-2001, \fI<stdlib.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
