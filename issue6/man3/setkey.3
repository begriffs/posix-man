.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "SETKEY" 3 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" setkey 
.SH NAME
setkey \- set encoding key (\fBCRYPT\fP)
.SH SYNOPSIS
.LP
\fB#include <stdlib.h>
.br
.sp
void setkey(const char *\fP\fIkey\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
The \fIsetkey\fP() function provides access to an implementation-defined
encoding algorithm. The argument of \fIsetkey\fP() is
an array of length 64 bytes containing only the bytes with numerical
value of 0 and 1. If this string is divided into groups of 8,
the low-order bit in each group is ignored; this gives a 56-bit key
which is used by the algorithm. This is the key that shall be
used with the algorithm to encode a string \fIblock\fP passed to \fIencrypt\fP().
.LP
The \fIsetkey\fP() function shall not change the setting of \fIerrno\fP
if successful. An application wishing to check for
error situations should set \fIerrno\fP to 0 before calling \fIsetkey\fP().
If \fIerrno\fP is non-zero on return, an error has
occurred.
.LP
The \fIsetkey\fP() function need not be reentrant. A function that
is not required to be reentrant is not required to be
thread-safe.
.SH RETURN VALUE
.LP
No values are returned.
.SH ERRORS
.LP
The \fIsetkey\fP() function shall fail if:
.TP 7
.B ENOSYS
The functionality is not supported on this implementation.
.sp
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Decoding need not be implemented in all environments. This is related
to government restrictions in some countries on encryption
and decryption routines. Historical practice has been to ship a different
version of the encryption library without the decryption
feature in the routines supplied. Thus the exported version of \fIencrypt\fP()
does
encoding but not decoding.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIcrypt\fP(), \fIencrypt\fP(), the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<stdlib.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
