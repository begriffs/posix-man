.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "LLROUND" 3 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" llround 
.SH NAME
llround, llroundf, llroundl \- round to nearest integer value
.SH SYNOPSIS
.LP
\fB#include <math.h>
.br
.sp
long long llround(double\fP \fIx\fP\fB);
.br
long long llroundf(float\fP \fIx\fP\fB);
.br
long long llroundl(long double\fP \fIx\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
These functions shall round their argument to the nearest integer
value, rounding halfway cases away from zero, regardless of
the current rounding direction.
.LP
An application wishing to check for error situations should set \fIerrno\fP
to zero and call
\fIfeclearexcept\fP(FE_ALL_EXCEPT) before calling these functions.
On return, if \fIerrno\fP is non-zero or
\fIfetestexcept\fP(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDERFLOW)
is non-zero, an error has occurred.
.SH RETURN VALUE
.LP
Upon successful completion, these functions shall return the rounded
integer value.
.LP
If
\fIx\fP is NaN, a domain error shall occur, and an unspecified value
is returned.
.LP
If \fIx\fP is +Inf, a domain error shall occur and an unspecified
value is returned.
.LP
If \fIx\fP is -Inf, a domain error shall occur and an unspecified
value is returned.
.LP
If the correct value is positive and too large to represent as a \fBlong
long\fP, a domain error shall occur and an unspecified
value is returned.
.LP
If the correct value is negative and too large to represent as a \fBlong
long\fP, a domain error shall occur and an unspecified
value is returned. 
.SH ERRORS
.LP
These functions shall fail if:
.TP 7
Domain\ Error
The \fIx\fP argument is NaN or \(+-Inf, or the correct value is not
representable as an integer. 
.LP
If the integer expression (math_errhandling & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set to [EDOM]. If the
integer expression (math_errhandling & MATH_ERREXCEPT) is non-zero,
then the invalid floating-point exception shall be raised.
.sp
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
On error, the expressions (math_errhandling & MATH_ERRNO) and (math_errhandling
& MATH_ERREXCEPT) are independent of
each other, but at least one of them must be non-zero.
.SH RATIONALE
.LP
These functions differ from the \fIllrint\fP() functions in that the
default rounding
direction for the \fIllround\fP() functions round halfway cases away
from zero and need not raise the inexact floating-point
exception for non-integer arguments that round to within the range
of the return type.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfeclearexcept\fP(), \fIfetestexcept\fP(), \fIlround\fP(), the
Base Definitions volume of IEEE\ Std\ 1003.1-2001, Section 4.18, Treatment
of Error Conditions for Mathematical Functions, \fI<math.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
