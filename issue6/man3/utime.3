.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "UTIME" 3 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" utime 
.SH NAME
utime \- set file access and modification times
.SH SYNOPSIS
.LP
\fB#include <utime.h>
.br
.sp
int utime(const char *\fP\fIpath\fP\fB, const struct utimbuf *\fP\fItimes\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
The \fIutime\fP() function shall set the access and modification times
of the file named by the \fIpath\fP argument.
.LP
If \fItimes\fP is a null pointer, the access and modification times
of the file shall be set to the current time. The effective
user ID of the process shall match the owner of the file, or the process
has write permission to the file or has appropriate
privileges, to use \fIutime\fP() in this manner.
.LP
If \fItimes\fP is not a null pointer, \fItimes\fP shall be interpreted
as a pointer to a \fButimbuf\fP structure and the
access and modification times shall be set to the values contained
in the designated structure. Only a process with the effective
user ID equal to the user ID of the file or a process with appropriate
privileges may use \fIutime\fP() this way.
.LP
The \fButimbuf\fP structure is defined in the \fI<utime.h>\fP header.
The times
in the structure \fButimbuf\fP are measured in seconds since the Epoch.
.LP
Upon successful completion, \fIutime\fP() shall mark the time of the
last file status change, \fIst_ctime\fP, to be updated;
see \fI<sys/stat.h>\fP.
.SH RETURN VALUE
.LP
Upon successful completion, 0 shall be returned. Otherwise, -1 shall
be returned and \fIerrno\fP shall be set to indicate the
error, and the file times shall not be affected.
.SH ERRORS
.LP
The \fIutime\fP() function shall fail if:
.TP 7
.B EACCES
Search permission is denied by a component of the path prefix; or
the \fItimes\fP argument is a null pointer and the effective
user ID of the process does not match the owner of the file, the process
does not have write permission for the file, and the
process does not have appropriate privileges.
.TP 7
.B ELOOP
A loop exists in symbolic links encountered during resolution of the
\fIpath\fP argument.
.TP 7
.B ENAMETOOLONG
The length of the \fIpath\fP argument exceeds {PATH_MAX} or a pathname
component is longer than {NAME_MAX}.
.TP 7
.B ENOENT
A component of \fIpath\fP does not name an existing file or \fIpath\fP
is an empty string.
.TP 7
.B ENOTDIR
A component of the path prefix is not a directory.
.TP 7
.B EPERM
The \fItimes\fP argument is not a null pointer and the calling process'
effective user ID does not match the owner of the file
and the calling process does not have the appropriate privileges.
.TP 7
.B EROFS
The file system containing the file is read-only.
.sp
.LP
The \fIutime\fP() function may fail if:
.TP 7
.B ELOOP
More than {SYMLOOP_MAX} symbolic links were encountered during resolution
of the \fIpath\fP argument.
.TP 7
.B ENAMETOOLONG
As a result of encountering a symbolic link in resolution of the \fIpath\fP
argument, the length of the substituted pathname
string exceeded {PATH_MAX}.
.sp
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
The \fIactime\fP structure member must be present so that an application
may set it, even though an implementation may ignore
it and not change the access time on the file. If an application intends
to leave one of the times of a file unchanged while
changing the other, it should use \fIstat\fP() to retrieve the file's
\fIst_atime\fP and
\fIst_mtime\fP parameters, set \fIactime\fP and \fImodtime\fP in the
buffer, and change one of them before making the
\fIutime\fP() call.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
The Base Definitions volume of IEEE\ Std\ 1003.1-2001, \fI<sys/stat.h>\fP,
\fI<utime.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
