.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "ENCRYPT" 3 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" encrypt 
.SH NAME
encrypt \- encoding function (\fBCRYPT\fP)
.SH SYNOPSIS
.LP
\fB#include <unistd.h>
.br
.sp
void encrypt(char\fP \fIblock\fP\fB[64], int\fP \fIedflag\fP\fB);
\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
The \fIencrypt\fP() function shall provide access to an implementation-defined
encoding algorithm. The key generated by \fIsetkey\fP() is used to
encrypt the string \fIblock\fP with \fIencrypt\fP().
.LP
The \fIblock\fP argument to \fIencrypt\fP() shall be an array of length
64 bytes containing only the bytes with values of 0
and 1. The array is modified in place to a similar array using the
key set by \fIsetkey\fP(). If \fIedflag\fP is 0, the argument is encoded.
If \fIedflag\fP is 1, the argument
may be decoded (see the APPLICATION USAGE section); if the argument
is not decoded, \fIerrno\fP shall be set to [ENOSYS].
.LP
The \fIencrypt\fP() function shall not change the setting of \fIerrno\fP
if successful. An application wishing to check for
error situations should set \fIerrno\fP to 0 before calling \fIencrypt\fP().
If \fIerrno\fP is non-zero on return, an error has
occurred.
.LP
The \fIencrypt\fP() function need not be reentrant. A function that
is not required to be reentrant is not required to be
thread-safe.
.SH RETURN VALUE
.LP
The \fIencrypt\fP() function shall not return a value.
.SH ERRORS
.LP
The \fIencrypt\fP() function shall fail if:
.TP 7
.B ENOSYS
The functionality is not supported on this implementation.
.sp
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Historical implementations of the \fIencrypt\fP() function used a
rather primitive encoding algorithm.
.LP
In some environments, decoding might not be implemented. This is related
to some Government restrictions on encryption and
decryption routines. Historical practice has been to ship a different
version of the encryption library without the decryption
feature in the routines supplied. Thus the exported version of \fIencrypt\fP()
does encoding but not decoding.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIcrypt\fP(), \fIsetkey\fP(), the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<unistd.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
