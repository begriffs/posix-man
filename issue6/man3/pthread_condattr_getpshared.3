.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "PTHREAD_CONDATTR_GETPSHARED" 3 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" pthread_condattr_getpshared 
.SH NAME
pthread_condattr_getpshared, pthread_condattr_setpshared \- get and
set the process\-shared condition variable
attributes
.SH SYNOPSIS
.LP
\fB#include <pthread.h>
.br
.sp
int pthread_condattr_getpshared(const pthread_condattr_t *restrict\fP
\fIattr\fP\fB,
.br
\ \ \ \ \ \  int *restrict\fP \fIpshared\fP\fB);
.br
int pthread_condattr_setpshared(pthread_condattr_t *\fP\fIattr\fP\fB,
.br
\ \ \ \ \ \  int\fP \fIpshared\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
The \fIpthread_condattr_getpshared\fP() function shall obtain the
value of the \fIprocess-shared\fP attribute from the
attributes object referenced by \fIattr\fP. The \fIpthread_condattr_setpshared\fP()
function shall set the \fIprocess-shared\fP
attribute in an initialized attributes object referenced by \fIattr\fP.
.LP
The \fIprocess-shared\fP attribute is set to PTHREAD_PROCESS_SHARED
to permit a condition variable to be operated upon by any
thread that has access to the memory where the condition variable
is allocated, even if the condition variable is allocated in
memory that is shared by multiple processes. If the \fIprocess-shared\fP
attribute is PTHREAD_PROCESS_PRIVATE, the condition
variable shall only be operated upon by threads created within the
same process as the thread that initialized the condition
variable; if threads of differing processes attempt to operate on
such a condition variable, the behavior is undefined. The default
value of the attribute is PTHREAD_PROCESS_PRIVATE.
.SH RETURN VALUE
.LP
If successful, the \fIpthread_condattr_setpshared\fP() function shall
return zero; otherwise, an error number shall be returned
to indicate the error.
.LP
If successful, the \fIpthread_condattr_getpshared\fP() function shall
return zero and store the value of the
\fIprocess-shared\fP attribute of \fIattr\fP into the object referenced
by the \fIpshared\fP parameter. Otherwise, an error
number shall be returned to indicate the error.
.SH ERRORS
.LP
The \fIpthread_condattr_getpshared\fP() and \fIpthread_condattr_setpshared\fP()
functions may fail if:
.TP 7
.B EINVAL
The value specified by \fIattr\fP is invalid.
.sp
.LP
The \fIpthread_condattr_setpshared\fP() function may fail if:
.TP 7
.B EINVAL
The new value specified for the attribute is outside the range of
legal values for that attribute.
.sp
.LP
These functions shall not return an error code of [EINTR].
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIpthread_create\fP(), \fIpthread_cond_destroy\fP(), \fIpthread_condattr_destroy\fP(),
\fIpthread_mutex_destroy\fP(), the Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<pthread.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
