.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "PTHREAD_BARRIERATTR_DESTROY" 3 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" pthread_barrierattr_destroy 
.SH NAME
pthread_barrierattr_destroy, pthread_barrierattr_init \- destroy and
initialize the barrier attributes object
(\fBADVANCED REALTIME THREADS\fP)
.SH SYNOPSIS
.LP
\fB#include <pthread.h>
.br
.sp
int pthread_barrierattr_destroy(pthread_barrierattr_t *\fP\fIattr\fP\fB);
.br
int pthread_barrierattr_init(pthread_barrierattr_t *\fP\fIattr\fP\fB);
\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
The \fIpthread_barrierattr_destroy\fP() function shall destroy a barrier
attributes object. A destroyed \fIattr\fP attributes
object can be reinitialized using \fIpthread_barrierattr_init\fP();
the results of otherwise referencing the object after it has
been destroyed are undefined. An implementation may cause \fIpthread_barrierattr_destroy\fP()
to set the object referenced by
\fIattr\fP to an invalid value.
.LP
The \fIpthread_barrierattr_init\fP() function shall initialize a barrier
attributes object \fIattr\fP with the default value
for all of the attributes defined by the implementation.
.LP
Results are undefined if \fIpthread_barrierattr_init\fP() is called
specifying an already initialized \fIattr\fP attributes
object.
.LP
After a barrier attributes object has been used to initialize one
or more barriers, any function affecting the attributes object
(including destruction) shall not affect any previously initialized
barrier.
.SH RETURN VALUE
.LP
If successful, the \fIpthread_barrierattr_destroy\fP() and \fIpthread_barrierattr_init\fP()
functions shall return zero;
otherwise, an error number shall be returned to indicate the error.
.SH ERRORS
.LP
The \fIpthread_barrierattr_destroy\fP() function may fail if:
.TP 7
.B EINVAL
The value specified by \fIattr\fP is invalid.
.sp
.LP
The \fIpthread_barrierattr_init\fP() function shall fail if:
.TP 7
.B ENOMEM
Insufficient memory exists to initialize the barrier attributes object.
.sp
.LP
These functions shall not return an error code of [EINTR].
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
The \fIpthread_barrierattr_destroy\fP() and \fIpthread_barrierattr_init\fP()
functions are part of the Barriers option and
need not be provided on all implementations.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIpthread_barrierattr_getpshared\fP(), \fIpthread_barrierattr_setpshared\fP(),
the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<pthread.h>\fP.
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
