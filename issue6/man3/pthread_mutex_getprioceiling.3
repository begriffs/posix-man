.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "PTHREAD_MUTEX_GETPRIOCEILING" 3 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" pthread_mutex_getprioceiling 
.SH NAME
pthread_mutex_getprioceiling, pthread_mutex_setprioceiling \- get and
set the priority ceiling of a mutex (\fBREALTIME
THREADS\fP)
.SH SYNOPSIS
.LP
\fB#include <pthread.h>
.br
.sp
int pthread_mutex_getprioceiling(const pthread_mutex_t *restrict\fP
\fImutex\fP\fB,
.br
\ \ \ \ \ \  int *restrict\fP \fIprioceiling\fP\fB);
.br
int pthread_mutex_setprioceiling(pthread_mutex_t *restrict\fP \fImutex\fP\fB,
.br
\ \ \ \ \ \  int\fP \fIprioceiling\fP\fB, int *restrict\fP \fIold_ceiling\fP\fB);
\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
The \fIpthread_mutex_getprioceiling\fP() function shall return the
current priority ceiling of the mutex.
.LP
The \fIpthread_mutex_setprioceiling\fP() function shall either lock
the mutex if it is unlocked, or block until it can
successfully lock the mutex, then it shall change the mutex's priority
ceiling and release the mutex. When the change is
successful, the previous value of the priority ceiling shall be returned
in \fIold_ceiling\fP. The process of locking the mutex
need not adhere to the priority protect protocol.
.LP
If the \fIpthread_mutex_setprioceiling\fP() function fails, the mutex
priority ceiling shall not be changed.
.SH RETURN VALUE
.LP
If successful, the \fIpthread_mutex_getprioceiling\fP() and \fIpthread_mutex_setprioceiling\fP()
functions shall return zero;
otherwise, an error number shall be returned to indicate the error.
.SH ERRORS
.LP
The \fIpthread_mutex_getprioceiling\fP() and \fIpthread_mutex_setprioceiling\fP()
functions may fail if:
.TP 7
.B EINVAL
The priority requested by \fIprioceiling\fP is out of range.
.TP 7
.B EINVAL
The value specified by \fImutex\fP does not refer to a currently existing
mutex.
.TP 7
.B EPERM
The caller does not have the privilege to perform the operation.
.sp
.LP
These functions shall not return an error code of [EINTR].
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIpthread_mutex_destroy\fP(), \fIpthread_mutex_lock\fP(), \fIpthread_mutex_timedlock\fP(),
the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<pthread.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
