.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "ISLOWER" 3 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" islower 
.SH NAME
islower \- test for a lowercase letter
.SH SYNOPSIS
.LP
\fB#include <ctype.h>
.br
.sp
int islower(int\fP \fIc\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
The \fIislower\fP() function shall test whether \fIc\fP is a character
of class \fBlower\fP in the program's current locale;
see the Base Definitions volume of IEEE\ Std\ 1003.1-2001, Chapter
7, Locale.
.LP
The \fIc\fP argument is an \fBint\fP, the value of which the application
shall ensure is a character representable as an
\fBunsigned char\fP or equal to the value of the macro EOF. If the
argument has any other value, the behavior is undefined.
.SH RETURN VALUE
.LP
The \fIislower\fP() function shall return non-zero if \fIc\fP is a
lowercase letter; otherwise, it shall return 0.
.SH ERRORS
.LP
No errors are defined.
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.SS Testing for a Lowercase Letter
.LP
The following example tests whether the value is a lowercase letter,
based on the locale of the user, then uses it as part of a
key value.
.sp
.RS
.nf

\fB#include <ctype.h>
#include <stdlib.h>
#include <locale.h>
\&...
char *keystr;
int elementlen, len;
char c;
\&...
setlocale(LC_ALL, "");
\&...
len = 0;
while (len < elementlen) {
    c = (char) (rand() % 256);
\&...
    if (islower(c))
        keystr[len++] = c;
    }
\&...
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
To ensure applications portability, especially across natural languages,
only this function and those listed in the SEE ALSO
section should be used for character classification.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIisalnum\fP(), \fIisalpha\fP(), \fIiscntrl\fP(), \fIisdigit\fP(),
\fIisgraph\fP(),
\fIisprint\fP(), \fIispunct\fP(), \fIisspace\fP(), \fIisupper\fP(),
\fIisxdigit\fP(),
\fIsetlocale\fP(), the Base Definitions volume of IEEE\ Std\ 1003.1-2001,
Chapter 7, Locale, \fI<ctype.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
