.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "GETWD" 3 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" getwd 
.SH NAME
getwd \- get the current working directory pathname (\fBLEGACY\fP)
.SH SYNOPSIS
.LP
\fB#include <unistd.h>
.br
.sp
char *getwd(char *\fP\fIpath_name\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
The \fIgetwd\fP() function shall determine an absolute pathname of
the current working directory of the calling process, and
copy a string containing that pathname into the array pointed to by
the \fIpath_name\fP argument.
.LP
If the length of the pathname of the current working directory is
greater than ({PATH_MAX}+1) including the null byte,
\fIgetwd\fP() shall fail and return a null pointer.
.SH RETURN VALUE
.LP
Upon successful completion, a pointer to the string containing the
absolute pathname of the current working directory shall be
returned. Otherwise, \fIgetwd\fP() shall return a null pointer and
the contents of the array pointed to by \fIpath_name\fP are
undefined.
.SH ERRORS
.LP
No errors are defined.
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
For applications portability, the \fIgetcwd\fP() function should be
used to determine
the current working directory instead of \fIgetwd\fP().
.SH RATIONALE
.LP
Since the user cannot specify the length of the buffer passed to \fIgetwd\fP(),
use of this function is discouraged. The length
of a pathname described in {PATH_MAX} is file system-dependent and
may vary from one mount point to another, or might even be
unlimited. It is possible to overflow this buffer in such a way as
to cause applications to fail, or possible system security
violations.
.LP
It is recommended that the \fIgetcwd\fP() function should be used
to determine the
current working directory.
.SH FUTURE DIRECTIONS
.LP
This function may be withdrawn in a future version.
.SH SEE ALSO
.LP
\fIgetcwd\fP(), the Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<unistd.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
