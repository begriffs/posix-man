.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "PTHREAD_BARRIERATTR_GETPSHARED" 3 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" pthread_barrierattr_getpshared 
.SH NAME
pthread_barrierattr_getpshared, pthread_barrierattr_setpshared \- get
and set the process\-shared attribute of the
barrier attributes object (\fBADVANCED REALTIME THREADS\fP)
.SH SYNOPSIS
.LP
\fB#include <pthread.h>
.br
.sp
\fP
.LP
\fBint pthread_barrierattr_getpshared(const pthread_barrierattr_t
*
.br
\ \ \ \ \ \  restrict\fP \fIattr\fP\fB, int *restrict\fP \fIpshared\fP\fB);
.br
int pthread_barrierattr_setpshared(pthread_barrierattr_t *\fP\fIattr\fP\fB,
.br
\ \ \ \ \ \  int\fP \fIpshared\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
The \fIpthread_barrierattr_getpshared\fP() function shall obtain the
value of the \fIprocess-shared\fP attribute from the
attributes object referenced by \fIattr\fP. The \fIpthread_barrierattr_setpshared\fP()
function shall set the
\fIprocess-shared\fP attribute in an initialized attributes object
referenced by \fIattr\fP.
.LP
The \fIprocess-shared\fP attribute is set to PTHREAD_PROCESS_SHARED
to permit a barrier to be operated upon by any thread that
has access to the memory where the barrier is allocated. If the \fIprocess-shared\fP
attribute is PTHREAD_PROCESS_PRIVATE, the
barrier shall only be operated upon by threads created within the
same process as the thread that initialized the barrier; if
threads of different processes attempt to operate on such a barrier,
the behavior is undefined. The default value of the attribute
shall be PTHREAD_PROCESS_PRIVATE. Both constants PTHREAD_PROCESS_SHARED
and PTHREAD_PROCESS_PRIVATE are defined in \fI<pthread.h>\fP.
.LP
Additional attributes, their default values, and the names of the
associated functions to get and set those attribute values are
implementation-defined.
.SH RETURN VALUE
.LP
If successful, the \fIpthread_barrierattr_getpshared\fP() function
shall return zero and store the value of the
\fIprocess-shared\fP attribute of \fIattr\fP into the object referenced
by the \fIpshared\fP parameter. Otherwise, an error
number shall be returned to indicate the error.
.LP
If successful, the \fIpthread_barrierattr_setpshared\fP() function
shall return zero; otherwise, an error number shall be
returned to indicate the error.
.SH ERRORS
.LP
These functions may fail if:
.TP 7
.B EINVAL
The value specified by \fIattr\fP is invalid.
.sp
.LP
The \fIpthread_barrierattr_setpshared\fP() function may fail if:
.TP 7
.B EINVAL
The new value specified for the \fIprocess-shared\fP attribute is
not one of the legal values PTHREAD_PROCESS_SHARED or
PTHREAD_PROCESS_PRIVATE.
.sp
.LP
These functions shall not return an error code of [EINTR].
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
The \fIpthread_barrierattr_getpshared\fP() and \fIpthread_barrierattr_setpshared\fP()
functions are part of the Barriers
option and need not be provided on all implementations.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIpthread_barrier_destroy\fP(), \fIpthread_barrierattr_destroy\fP(),
\fIpthread_barrierattr_init\fP(), the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<pthread.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
