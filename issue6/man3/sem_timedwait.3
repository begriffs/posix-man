.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "SEM_TIMEDWAIT" 3 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" sem_timedwait 
.SH NAME
sem_timedwait \- lock a semaphore (\fBADVANCED REALTIME\fP)
.SH SYNOPSIS
.LP
\fB#include <semaphore.h>
.br
#include <time.h>
.br
.sp
int sem_timedwait(sem_t *restrict\fP \fIsem\fP\fB,
.br
\ \ \ \ \ \  const struct timespec *restrict\fP \fIabs_timeout\fP\fB);
\fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
The \fIsem_timedwait\fP() function shall lock the semaphore referenced
by \fIsem\fP as in the \fIsem_wait\fP() function. However, if the
semaphore cannot be locked without waiting for another
process or thread to unlock the semaphore by performing a \fIsem_post\fP()
function, this
wait shall be terminated when the specified timeout expires.
.LP
The timeout shall expire when the absolute time specified by \fIabs_timeout\fP
passes, as measured by the clock on which
timeouts are based (that is, when the value of that clock equals or
exceeds \fIabs_timeout\fP), or if the absolute time specified
by \fIabs_timeout\fP has already been passed at the time of the call.
.LP
If the Timers option is supported, the timeout shall be based on the
CLOCK_REALTIME clock. If the Timers option is not supported,
the timeout shall be based on the system clock as returned by the
\fItime\fP() function. The
resolution of the timeout shall be the resolution of the clock on
which it is based. The \fBtimespec\fP data type is defined as a
structure in the \fI<time.h>\fP header.
.LP
Under no circumstance shall the function fail with a timeout if the
semaphore can be locked immediately. The validity of the
\fIabs_timeout\fP need not be checked if the semaphore can be locked
immediately. 
.SH RETURN VALUE
.LP
The \fIsem_timedwait\fP() function shall return zero if the calling
process successfully performed the semaphore lock operation
on the semaphore designated by \fIsem\fP. If the call was unsuccessful,
the state of the semaphore shall be unchanged, and the
function shall return a value of -1 and set \fIerrno\fP to indicate
the error.
.SH ERRORS
.LP
The \fIsem_timedwait\fP() function shall fail if:
.TP 7
.B EINVAL
The \fIsem\fP argument does not refer to a valid semaphore.
.TP 7
.B EINVAL
The process or thread would have blocked, and the \fIabs_timeout\fP
parameter specified a nanoseconds field value less than
zero or greater than or equal to 1000 million.
.TP 7
.B ETIMEDOUT
The semaphore could not be locked before the specified timeout expired.
.sp
.LP
The \fIsem_timedwait\fP() function may fail if:
.TP 7
.B EDEADLK
A deadlock condition was detected.
.TP 7
.B EINTR
A signal interrupted this function.
.sp
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
Applications using these functions may be subject to priority inversion,
as discussed in the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 3.285, Priority Inversion.
.LP
The \fIsem_timedwait\fP() function is part of the Semaphores and Timeouts
options and need not be provided on all
implementations.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIsem_post\fP(), \fIsem_trywait\fP(), \fIsem_wait\fP(), \fIsemctl\fP(),
\fIsemget\fP(), \fIsemop\fP(), \fItime\fP(), the Base Definitions
volume of
IEEE\ Std\ 1003.1-2001, \fI<semaphore.h>\fP, \fI<time.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
