.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "POSIX_TRACE_EVENTSET_ADD" 3 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" posix_trace_eventset_add 
.SH NAME
posix_trace_eventset_add, posix_trace_eventset_del, posix_trace_eventset_empty,
posix_trace_eventset_fill,
posix_trace_eventset_ismember \- manipulate trace event type sets (\fBTRACING\fP)
.SH SYNOPSIS
.LP
\fB#include <trace.h>
.br
.sp
int posix_trace_eventset_add(trace_event_id_t\fP \fIevent_id\fP\fB,
.br
\ \ \ \ \ \  trace_event_set_t *\fP\fIset\fP\fB);
.br
int posix_trace_eventset_del(trace_event_id_t\fP \fIevent_id\fP\fB,
.br
\ \ \ \ \ \  trace_event_set_t *\fP\fIset\fP\fB);
.br
int posix_trace_eventset_empty(trace_event_set_t *\fP\fIset\fP\fB);
.br
int posix_trace_eventset_fill(trace_event_set_t *\fP\fIset\fP\fB,
int\fP \fIwhat\fP\fB);
.br
int posix_trace_eventset_ismember(trace_event_id_t\fP \fIevent_id\fP\fB,
.br
\ \ \ \ \ \  const trace_event_set_t *restrict\fP \fIset\fP\fB, int
*restrict\fP
\fIismember\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
These primitives manipulate sets of trace event types. They operate
on data objects addressable by the application, not on the
current trace event filter of any trace stream.
.LP
The \fIposix_trace_eventset_add\fP() and \fIposix_trace_eventset_del\fP()
functions, respectively, shall add or delete the
individual trace event type specified by the value of the argument
\fIevent_id\fP to or from the trace event type set pointed to
by the argument \fIset\fP. Adding a trace event type already in the
set or deleting a trace event type not in the set shall not be
considered an error.
.LP
The \fIposix_trace_eventset_empty\fP() function shall initialize the
trace event type set pointed to by the \fIset\fP argument
such that all trace event types defined, both system and user, shall
be excluded from the set.
.LP
The \fIposix_trace_eventset_fill\fP() function shall initialize the
trace event type set pointed to by the argument \fIset\fP,
such that the set of trace event types defined by the argument \fIwhat\fP
shall be included in the set. The value of the argument
\fIwhat\fP shall consist of one of the following values, as defined
in the \fI<trace.h>\fP header:
.TP 7
POSIX_TRACE_WOPID_EVENTS
.sp
All the process-independent implementation-defined system trace event
types are included in the set.
.TP 7
POSIX_TRACE_SYSTEM_EVENTS
.sp
All the implementation-defined system trace event types are included
in the set, as are those defined in
IEEE\ Std\ 1003.1-2001.
.TP 7
POSIX_TRACE_ALL_EVENTS
.sp
All trace event types defined, both system and user, are included
in the set.
.sp
.LP
Applications shall call either \fIposix_trace_eventset_empty\fP()
or \fIposix_trace_eventset_fill\fP() at least once for each
object of type \fBtrace_event_set_t\fP prior to any other use of that
object. If such an object is not initialized in this way,
but is nonetheless supplied as an argument to any of the \fIposix_trace_eventset_add\fP(),
\fIposix_trace_eventset_del\fP(), or
\fIposix_trace_eventset_ismember\fP() functions, the results are undefined.
.LP
The \fIposix_trace_eventset_ismember\fP() function shall test whether
the trace event type specified by the value of the
argument \fIevent_id\fP is a member of the set pointed to by the argument
\fIset\fP. The value returned in the object pointed to
by \fIismember\fP argument is zero if the trace event type identifier
is not a member of the set and a value different from zero
if it is a member of the set.
.SH RETURN VALUE
.LP
Upon successful completion, these functions shall return a value of
zero. Otherwise, they shall return the corresponding error
number.
.SH ERRORS
.LP
These functions may fail if:
.TP 7
.B EINVAL
The value of one of the arguments is invalid.
.sp
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIposix_trace_set_filter\fP(), \fIposix_trace_trid_eventid_open\fP(),
the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, \fI<trace.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
