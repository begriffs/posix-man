.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "CHDIR" 3 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" chdir 
.SH NAME
chdir \- change working directory
.SH SYNOPSIS
.LP
\fB#include <unistd.h>
.br
.sp
int chdir(const char *\fP\fIpath\fP\fB);
.br
\fP
.SH DESCRIPTION
.LP
The \fIchdir\fP() function shall cause the directory named by the
pathname pointed to by the \fIpath\fP argument to become the
current working directory; that is, the starting point for path searches
for pathnames not beginning with \fB'/'\fP .
.SH RETURN VALUE
.LP
Upon successful completion, 0 shall be returned. Otherwise, -1 shall
be returned, the current working directory shall remain
unchanged, and \fIerrno\fP shall be set to indicate the error.
.SH ERRORS
.LP
The \fIchdir\fP() function shall fail if:
.TP 7
.B EACCES
Search permission is denied for any component of the pathname.
.TP 7
.B ELOOP
A loop exists in symbolic links encountered during resolution of the
\fIpath\fP argument.
.TP 7
.B ENAMETOOLONG
The length of the \fIpath\fP argument exceeds {PATH_MAX} or a pathname
component is longer than {NAME_MAX}.
.TP 7
.B ENOENT
A component of \fIpath\fP does not name an existing directory or \fIpath\fP
is an empty string.
.TP 7
.B ENOTDIR
A component of the pathname is not a directory.
.sp
.LP
The \fIchdir\fP() function may fail if:
.TP 7
.B ELOOP
More than {SYMLOOP_MAX} symbolic links were encountered during resolution
of the \fIpath\fP argument.
.TP 7
.B ENAMETOOLONG
As a result of encountering a symbolic link in resolution of the \fIpath\fP
argument, the length of the substituted pathname
string exceeded {PATH_MAX}.
.sp
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.SS Changing the Current Working Directory
.LP
The following example makes the value pointed to by \fBdirectory\fP,
\fB/tmp\fP, the current working directory.
.sp
.RS
.nf

\fB#include <unistd.h>
\&...
char *directory = "/tmp";
int ret;
.sp

ret = chdir (directory);
\fP
.fi
.RE
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
The \fIchdir\fP() function only affects the working directory of the
current process.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIgetcwd\fP(), the Base Definitions volume of IEEE\ Std\ 1003.1-2001,
\fI<unistd.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
