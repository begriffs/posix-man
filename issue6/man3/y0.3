.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "Y0" 3 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" y0 
.SH NAME
y0, y1, yn \- Bessel functions of the second kind
.SH SYNOPSIS
.LP
\fB#include <math.h>
.br
.sp
double y0(double\fP \fIx\fP\fB);
.br
double y1(double\fP \fIx\fP\fB);
.br
double yn(int\fP \fIn\fP\fB, double\fP \fIx\fP\fB); \fP
\fB
.br
\fP
.SH DESCRIPTION
.LP
The \fIy0\fP(), \fIy1\fP(), and \fIyn\fP() functions shall compute
Bessel functions of \fIx\fP of the second kind of orders
0, 1, and \fIn\fP, respectively.
.LP
An application wishing to check for error situations should set \fIerrno\fP
to zero and call
\fIfeclearexcept\fP(FE_ALL_EXCEPT) before calling these functions.
On return, if \fIerrno\fP is non-zero or
\fIfetestexcept\fP(FE_INVALID | FE_DIVBYZERO | FE_OVERFLOW | FE_UNDERFLOW)
is non-zero, an error has occurred.
.SH RETURN VALUE
.LP
Upon successful completion, these functions shall return the relevant
Bessel value of \fIx\fP of the second kind.
.LP
If \fIx\fP is NaN, NaN shall be returned.
.LP
If the \fIx\fP argument to these functions is negative, -HUGE_VAL
or NaN shall be returned, and a domain error may occur.
.LP
If \fIx\fP is 0.0, -HUGE_VAL shall be returned and a range error may
occur.
.LP
If the correct result would cause underflow, 0.0 shall be returned
and a range error may occur.
.LP
If the correct result would cause overflow, -HUGE_VAL or 0.0 shall
be returned and a range error may occur.
.SH ERRORS
.LP
These functions may fail if:
.TP 7
Domain\ Error
The value of \fIx\fP is negative. 
.LP
If the integer expression (math_errhandling & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set to [EDOM]. If the
integer expression (math_errhandling & MATH_ERREXCEPT) is non-zero,
then the invalid floating-point exception shall be
raised.
.TP 7
Range\ Error
The value of \fIx\fP is 0.0, or the correct result would cause overflow.
.LP
If the integer expression (math_errhandling & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set to [ERANGE]. If the
integer expression (math_errhandling & MATH_ERREXCEPT) is non-zero,
then the overflow floating-point exception shall be
raised.
.TP 7
Range\ Error
The value of \fIx\fP is too large in magnitude, or the correct result
would cause underflow. 
.LP
If the integer expression (math_errhandling & MATH_ERRNO) is non-zero,
then \fIerrno\fP shall be set to [ERANGE]. If the
integer expression (math_errhandling & MATH_ERREXCEPT) is non-zero,
then the underflow floating-point exception shall be
raised.
.sp
.LP
\fIThe following sections are informative.\fP
.SH EXAMPLES
.LP
None.
.SH APPLICATION USAGE
.LP
On error, the expressions (math_errhandling & MATH_ERRNO) and (math_errhandling
& MATH_ERREXCEPT) are independent of
each other, but at least one of them must be non-zero.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIfeclearexcept\fP(), \fIfetestexcept\fP(), \fIisnan\fP(), \fIj0\fP(),
the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 4.18, Treatment of Error Conditions
for
Mathematical Functions, \fI<math.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
