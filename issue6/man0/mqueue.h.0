.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "<mqueue.h>" 0 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" <mqueue.h> 
.SH NAME
mqueue.h \- message queues (\fBREALTIME\fP)
.SH SYNOPSIS
.LP
\fB#include <mqueue.h> \fP
.SH DESCRIPTION
.LP
The \fI<mqueue.h>\fP header shall define the \fBmqd_t\fP type, which
is used for message queue descriptors. This is not
an array type.
.LP
The \fI<mqueue.h>\fP header shall define the \fBsigevent\fP structure
(as described in \fI<signal.h>\fP ) and the \fBmq_attr\fP structure,
which is used in getting and setting the attributes
of a message queue. Attributes are initially set when the message
queue is created. An \fBmq_attr\fP structure shall have at least
the following fields:
.sp
.RS
.nf

\fBlong    mq_flags   \fP Message queue flags. \fB
long    mq_maxmsg  \fP Maximum number of messages. \fB
long    mq_msgsize \fP Maximum message size. \fB
long    mq_curmsgs \fP Number of messages currently queued. \fB
\fP
.fi
.RE
.LP
The following shall be declared as functions and may also be defined
as macros. Function prototypes shall be provided.
.sp
.RS
.nf

\fBint      mq_close(mqd_t);
int      mq_getattr(mqd_t, struct mq_attr *);
int      mq_notify(mqd_t, const struct sigevent *);
mqd_t    mq_open(const char *, int, ...);
ssize_t  mq_receive(mqd_t, char *, size_t, unsigned *);
int      mq_send(mqd_t, const char *, size_t, unsigned );
int      mq_setattr(mqd_t, const struct mq_attr *restrict,
             struct mq_attr *restrict);

ssize_t  mq_timedreceive(mqd_t, char *restrict, size_t,
             unsigned *restrict, const struct timespec *restrict);
int      mq_timedsend(mqd_t, const char *, size_t, unsigned,
             const struct timespec *);

int      mq_unlink(const char *);
\fP
.fi
.RE
.LP
Inclusion of the \fI<mqueue.h>\fP header may make visible symbols
defined in the headers \fI<fcntl.h>\fP, \fI<signal.h>\fP, \fI<sys/types.h>\fP,
and \fI<time.h>\fP.
.LP
\fIThe following sections are informative.\fP
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fI<fcntl.h>\fP, \fI<signal.h>\fP, \fI<sys/types.h>\fP, \fI<time.h>\fP,
the System Interfaces volume
of IEEE\ Std\ 1003.1-2001, \fImq_close\fP(), \fImq_getattr\fP(), \fImq_notify\fP(),
\fImq_open\fP(), \fImq_receive\fP(), \fImq_send\fP(), \fImq_setattr\fP(),
\fImq_timedreceive\fP(), \fImq_timedsend\fP(), \fImq_unlink\fP()
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
