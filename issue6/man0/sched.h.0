.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "<sched.h>" 0 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" <sched.h> 
.SH NAME
sched.h \- execution scheduling (\fBREALTIME\fP)
.SH SYNOPSIS
.LP
\fB#include <sched.h> \fP
.SH DESCRIPTION
.LP
The \fI<sched.h>\fP header shall define the \fBsched_param\fP structure,
which contains the scheduling parameters
required for implementation of each supported scheduling policy. This
structure shall contain at least the following member:
.sp
.RS
.nf

\fBint       sched_priority       \fP Process execution scheduling priority. \fB
\fP
.fi
.RE
.LP
In addition, if _POSIX_SPORADIC_SERVER or _POSIX_THREAD_SPORADIC_SERVER
is defined, the \fBsched_param\fP structure defined in
\fI<sched.h>\fP shall contain the following members in addition to
those specified above:
.sp
.RS
.nf

\fBint             sched_ss_low_priority\fP Low scheduling priority for \fB
                                     \fP sporadic server. \fB
struct timespec sched_ss_repl_period \fP Replenishment period for \fB
                                     \fP sporadic server. \fB
struct timespec sched_ss_init_budget \fP Initial budget for sporadic server. \fB
int             sched_ss_max_repl    \fP Maximum pending replenishments for \fB
                                     \fP sporadic server. \fB
\fP
.fi
.RE
.LP
Each process is controlled by an associated scheduling policy and
priority. Associated with each policy is a priority range.
Each policy definition specifies the minimum priority range for that
policy. The priority ranges for each policy may overlap the
priority ranges of other policies.
.LP
Four scheduling policies are defined; others may be defined by the
implementation. The four standard policies are indicated by
the values of the following symbolic constants:
.TP 7
SCHED_FIFO
First in-first out (FIFO) scheduling policy.
.TP 7
SCHED_RR
Round robin scheduling policy.
.TP 7
SCHED_SPORADIC
Sporadic server scheduling policy. 
.TP 7
SCHED_OTHER
Another scheduling policy.
.sp
.LP
The values of these constants are distinct.
.LP
The following shall be declared as functions and may also be defined
as macros. Function prototypes shall be provided.
.sp
.RS
.nf

\fB
int    sched_get_priority_max(int);
int    sched_get_priority_min(int);

int    sched_getparam(pid_t, struct sched_param *);
int    sched_getscheduler(pid_t);

int    sched_rr_get_interval(pid_t, struct timespec *);

int    sched_setparam(pid_t, const struct sched_param *);
int    sched_setscheduler(pid_t, int, const struct sched_param *);

int    sched_yield(void);


\fP
.fi
.RE
.LP
Inclusion of the \fI<sched.h>\fP header may make visible all symbols
from the \fI<time.h>\fP header.
.LP
\fIThe following sections are informative.\fP
.SH APPLICATION USAGE
.LP
None.
.SH RATIONALE
.LP
None.
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fI<time.h>\fP
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
