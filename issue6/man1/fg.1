.\" Copyright (c) 2001-2003 The Open Group, All Rights Reserved 
.TH "FG" 1 2003 "IEEE/The Open Group" "POSIX Programmer's Manual"
.\" fg 
.SH NAME
fg \- run jobs in the foreground
.SH SYNOPSIS
.LP
\fBfg\fP \fB[\fP\fIjob_id\fP\fB]\fP\fB\fP
.SH DESCRIPTION
.LP
If job control is enabled (see the description of \fIset\fP \fB-m\fP),
the
\fIfg\fP utility shall move a background job from the current environment
(see \fIShell
Execution Environment\fP ) into the foreground.
.LP
Using \fIfg\fP to place a job into the foreground shall remove its
process ID from the list of those "known in the current
shell execution environment''; see \fIAsynchronous Lists\fP .
.SH OPTIONS
.LP
None.
.SH OPERANDS
.LP
The following operand shall be supported:
.TP 7
\fIjob_id\fP
Specify the job to be run as a foreground job. If no \fIjob_id\fP
operand is given, the \fIjob_id\fP for the job that was
most recently suspended, placed in the background, or run as a background
job shall be used. The format of \fIjob_id\fP is
described in the Base Definitions volume of IEEE\ Std\ 1003.1-2001,
Section 3.203, Job Control Job ID.
.sp
.SH STDIN
.LP
Not used.
.SH INPUT FILES
.LP
None.
.SH ENVIRONMENT VARIABLES
.LP
The following environment variables shall affect the execution of
\fIfg\fP:
.TP 7
\fILANG\fP
Provide a default value for the internationalization variables that
are unset or null. (See the Base Definitions volume of
IEEE\ Std\ 1003.1-2001, Section 8.2, Internationalization Variables
for
the precedence of internationalization variables used to determine
the values of locale categories.)
.TP 7
\fILC_ALL\fP
If set to a non-empty string value, override the values of all the
other internationalization variables.
.TP 7
\fILC_CTYPE\fP
Determine the locale for the interpretation of sequences of bytes
of text data as characters (for example, single-byte as
opposed to multi-byte characters in arguments).
.TP 7
\fILC_MESSAGES\fP
Determine the locale that should be used to affect the format and
contents of diagnostic messages written to standard
error.
.TP 7
\fINLSPATH\fP
Determine the location of message catalogs for the processing of \fILC_MESSAGES
\&.\fP 
.sp
.SH ASYNCHRONOUS EVENTS
.LP
Default.
.SH STDOUT
.LP
The \fIfg\fP utility shall write the command line of the job to standard
output in the following format:
.sp
.RS
.nf

\fB"%s\\n", <\fP\fIcommand\fP\fB>
\fP
.fi
.RE
.SH STDERR
.LP
The standard error shall be used only for diagnostic messages.
.SH OUTPUT FILES
.LP
None.
.SH EXTENDED DESCRIPTION
.LP
None.
.SH EXIT STATUS
.LP
The following exit values shall be returned:
.TP 7
\ 0
Successful completion.
.TP 7
>0
An error occurred.
.sp
.SH CONSEQUENCES OF ERRORS
.LP
If job control is disabled, the \fIfg\fP utility shall exit with an
error and no job shall be placed in the foreground.
.LP
\fIThe following sections are informative.\fP
.SH APPLICATION USAGE
.LP
The \fIfg\fP utility does not work as expected when it is operating
in its own utility execution environment because that
environment has no applicable jobs to manipulate. See the APPLICATION
USAGE section for \fIbg\fP . For this
reason, \fIfg\fP is generally implemented as a shell regular built-in.
.SH EXAMPLES
.LP
None.
.SH RATIONALE
.LP
The extensions to the shell specified in this volume of IEEE\ Std\ 1003.1-2001
have mostly been based on features
provided by the KornShell. The job control features provided by \fIbg\fP,
\fIfg\fP, and \fIjobs\fP are also based on the KornShell. The standard
developers examined the characteristics
of the C shell versions of these utilities and found that differences
exist. Despite widespread use of the C shell, the KornShell
versions were selected for this volume of IEEE\ Std\ 1003.1-2001 to
maintain a degree of uniformity with the rest of the
KornShell features selected (such as the very popular command line
editing features).
.SH FUTURE DIRECTIONS
.LP
None.
.SH SEE ALSO
.LP
\fIAsynchronous Lists\fP, \fIShell Execution
Environment\fP, \fIbg\fP, \fIkill\fP(), \fIjobs\fP,
\fIwait\fP()
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2003 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 6, Copyright (C) 2001-2003 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group. In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.opengroup.org/unix/online.html .
