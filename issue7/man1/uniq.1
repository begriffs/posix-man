'\" et
.TH UNIQ "1" 2013 "IEEE/The Open Group" "POSIX Programmer's Manual"

.SH NAME
uniq
\(em report or filter out repeated lines in a file
.SH SYNOPSIS
.LP
.nf
uniq \fB[\fR\(mic|\(mid|\(miu\fB] [\fR\(mif \fIfields\fB] [\fR\(mis \fIchar\fB] [\fIinput_file \fB[\fIoutput_file\fB]]\fR
.fi
.SH DESCRIPTION
The
.IR uniq
utility shall read an input file comparing adjacent lines, and write
one copy of each input line on the output. The second and succeeding
copies of repeated adjacent input lines shall not be written.
The trailing
<newline>
of each line in the input shall be ignored when doing comparisons.
.P
Repeated lines in the input shall not be detected if they are not
adjacent.
.SH OPTIONS
The
.IR uniq
utility shall conform to the Base Definitions volume of POSIX.1\(hy2008,
.IR "Section 12.2" ", " "Utility Syntax Guidelines",
except that
.BR '\(pl' 
may be recognized as an option delimiter as well as
.BR '\(mi' .
.P
The following options shall be supported:
.IP "\fB\(mic\fP" 10
Precede each output line with a count of the number of times the line
occurred in the input.
.IP "\fB\(mid\fP" 10
Suppress the writing of lines that are not repeated in the input.
.IP "\fB\(mif\ \fIfields\fR" 10
Ignore the first
.IR fields
fields on each input line when doing comparisons, where
.IR fields
is a positive decimal integer. A field is the maximal string matched
by the basic regular expression:
.RS 10 
.sp
.RS 4
.nf
\fB
[[:blank:]]*[^[:blank:]]*
.fi \fR
.P
.RE
.P
If the
.IR fields
option-argument specifies more fields than appear on an input line, a
null string shall be used for comparison.
.RE
.IP "\fB\(mis\ \fIchars\fR" 10
Ignore the first
.IR chars
characters when doing comparisons, where
.IR chars
shall be a positive decimal integer. If specified in conjunction with
the
.BR \(mif
option, the first
.IR chars
characters after the first
.IR fields
fields shall be ignored. If the
.IR chars
option-argument specifies more characters than remain on an input line,
a null string shall be used for comparison.
.IP "\fB\(miu\fP" 10
Suppress the writing of lines that are repeated in the input.
.SH OPERANDS
The following operands shall be supported:
.IP "\fIinput_file\fR" 10
A pathname of the input file. If the
.IR input_file
operand is not specified, or if the
.IR input_file
is
.BR '\(mi' ,
the standard input shall be used.
.IP "\fIoutput_file\fR" 10
A pathname of the output file. If the
.IR output_file
operand is not specified, the standard output shall be used. The
results are unspecified if the file named by
.IR output_file
is the file named by
.IR input_file .
.SH STDIN
The standard input shall be used only if no
.IR input_file
operand is specified or if
.IR input_file
is
.BR '\(mi' .
See the INPUT FILES section.
.SH "INPUT FILES"
The input file shall be a text file.
.SH "ENVIRONMENT VARIABLES"
The following environment variables shall affect the execution of
.IR uniq :
.IP "\fILANG\fP" 10
Provide a default value for the internationalization variables that are
unset or null. (See the Base Definitions volume of POSIX.1\(hy2008,
.IR "Section 8.2" ", " "Internationalization Variables"
for the precedence of internationalization variables used to determine
the values of locale categories.)
.IP "\fILC_ALL\fP" 10
If set to a non-empty string value, override the values of all the
other internationalization variables.
.IP "\fILC_COLLATE\fP" 10
.br
Determine the locale for ordering rules.
.IP "\fILC_CTYPE\fP" 10
Determine the locale for the interpretation of sequences of bytes of
text data as characters (for example, single-byte as opposed to
multi-byte characters in arguments and input files) and which
characters constitute a
<blank>
in the current locale.
.IP "\fILC_MESSAGES\fP" 10
.br
Determine the locale that should be used to affect the format and
contents of diagnostic messages written to standard error.
.IP "\fINLSPATH\fP" 10
Determine the location of message catalogs for the processing of
.IR LC_MESSAGES .
.SH "ASYNCHRONOUS EVENTS"
Default.
.SH STDOUT
The standard output shall be used if no
.IR output_file
operand is specified, and shall be used if the
.IR output_file
operand is
.BR '\(mi' 
and the implementation treats the
.BR '\(mi' 
as meaning standard output. Otherwise, the standard output shall
not be used.
See the OUTPUT FILES section.
.SH STDERR
The standard error shall be used only for diagnostic messages.
.SH "OUTPUT FILES"
If the
.BR \(mic
option is specified, the output file shall be empty or each line
shall be of the form:
.sp
.RS 4
.nf
\fB
"%d %s", <\fInumber of duplicates\fR>, <\fIline\fR>
.fi \fR
.P
.RE
.P
otherwise, the output file shall be empty or each line shall be
of the form:
.sp
.RS 4
.nf
\fB
"%s", <\fIline\fR>
.fi \fR
.P
.RE
.SH "EXTENDED DESCRIPTION"
None.
.SH "EXIT STATUS"
The following exit values shall be returned:
.IP "\00" 6
The utility executed successfully.
.IP >0 6
An error occurred.
.SH "CONSEQUENCES OF ERRORS"
Default.
.LP
.IR "The following sections are informative."
.SH "APPLICATION USAGE"
The
.IR sort
utility can be used to cause repeated lines to be adjacent in the input
file.
.SH EXAMPLES
The following input file data (but flushed left) was used for a test
series on
.IR uniq :
.sp
.RS 4
.nf
\fB
#01 foo0 bar0 foo1 bar1
#02 bar0 foo1 bar1 foo1
#03 foo0 bar0 foo1 bar1
#04
#05 foo0 bar0 foo1 bar1
#06 foo0 bar0 foo1 bar1
#07 bar0 foo1 bar1 foo0
.fi \fR
.P
.RE
.P
What follows is a series of test invocations of the
.IR uniq
utility that use a mixture of
.IR uniq
options against the input file data. These tests verify the meaning of
.IR adjacent .
The
.IR uniq
utility views the input data as a sequence of strings delimited by
.BR '\en' .
Accordingly, for the
.IR fields th
member of the sequence,
.IR uniq
interprets unique or repeated adjacent lines strictly relative to the
.IR fields +1th
member.
.IP " 1." 4
This first example tests the line counting option, comparing each line
of the input file data starting from the second field:
.RS 4 
.sp
.RS 4
.nf
\fB
uniq \(mic \(mif 1 uniq_0I.t
    1 #01 foo0 bar0 foo1 bar1
    1 #02 bar0 foo1 bar1 foo1
    1 #03 foo0 bar0 foo1 bar1
    1 #04
    2 #05 foo0 bar0 foo1 bar1
    1 #07 bar0 foo1 bar1 foo0
.fi \fR
.P
.RE
.P
The number
.BR '2' ,
prefixing the fifth line of output, signifies that the
.IR uniq
utility detected a pair of repeated lines. Given the input data, this
can only be true when
.IR uniq
is run using the
.BR "\(mif\ 1"
option (which shall cause
.IR uniq
to ignore the first field on each input line).
.RE
.IP " 2." 4
The second example tests the option to suppress unique lines, comparing
each line of the input file data starting from the second field:
.RS 4 
.sp
.RS 4
.nf
\fB
uniq \(mid \(mif 1 uniq_0I.t
#05 foo0 bar0 foo1 bar1
.fi \fR
.P
.RE
.RE
.IP " 3." 4
This test suppresses repeated lines, comparing each line of the input
file data starting from the second field:
.RS 4 
.sp
.RS 4
.nf
\fB
uniq \(miu \(mif 1 uniq_0I.t
#01 foo0 bar0 foo1 bar1
#02 bar0 foo1 bar1 foo1
#03 foo0 bar0 foo1 bar1
#04
#07 bar0 foo1 bar1 foo0
.fi \fR
.P
.RE
.RE
.IP " 4." 4
This suppresses unique lines, comparing each line of the input file
data starting from the third character:
.RS 4 
.sp
.RS 4
.nf
\fB
uniq \(mid \(mis 2 uniq_0I.t
.fi \fR
.P
.RE
.P
In the last example, the
.IR uniq
utility found no input matching the above criteria.
.RE
.SH RATIONALE
Some historical implementations have limited lines to be 1\|080 bytes
in length, which does not meet the implied
{LINE_MAX}
limit.
.P
Earlier versions of this standard allowed the
.BR \(mi \c
.IR number
and
.BR \(pl \c
.IR number
options. These options are no longer specified by POSIX.1\(hy2008 but
may be present in some implementations.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.IR "\fIcomm\fR\^",
.IR "\fIsort\fR\^"
.P
The Base Definitions volume of POSIX.1\(hy2008,
.IR "Chapter 8" ", " "Environment Variables",
.IR "Section 12.2" ", " "Utility Syntax Guidelines"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, Copyright (C) 2013 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
(This is POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.unix.org/online.html .

Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
