'\" et
.TH SEM_POST "3" 2013 "IEEE/The Open Group" "POSIX Programmer's Manual"

.SH NAME
sem_post
\(em unlock a semaphore
.SH SYNOPSIS
.LP
.nf
#include <semaphore.h>
.P
int sem_post(sem_t *\fIsem\fP);
.fi
.SH DESCRIPTION
The
\fIsem_post\fR()
function shall unlock the semaphore referenced by
.IR sem
by performing a semaphore unlock operation on that semaphore.
.P
If the semaphore value resulting from this operation is positive, then
no threads were blocked waiting for the semaphore to become unlocked;
the semaphore value is simply incremented.
.P
If the value of the semaphore resulting from this operation is zero,
then one of the threads blocked waiting for the semaphore shall be
allowed to return successfully from its call to
\fIsem_wait\fR().
If the Process Scheduling option is supported, the thread to be
unblocked shall be chosen in a manner appropriate to the scheduling
policies and parameters in effect for the blocked threads. In the case
of the schedulers SCHED_FIFO and SCHED_RR,
the highest priority waiting thread shall be unblocked, and if there is
more than one highest priority thread blocked waiting for the
semaphore, then the highest priority thread that has been waiting the
longest shall be unblocked. If the Process Scheduling option is not
defined, the choice of a thread to unblock is unspecified.
.P
If the Process Sporadic Server option is supported, and the scheduling
policy is SCHED_SPORADIC, the semantics are as per SCHED_FIFO above.
.P
The
\fIsem_post\fR()
function shall be async-signal-safe and may be invoked from a
signal-catching function.
.SH "RETURN VALUE"
If successful, the
\fIsem_post\fR()
function shall return zero; otherwise, the function shall return \(mi1
and set
.IR errno
to indicate the error.
.SH ERRORS
The
\fIsem_post\fR()
function may fail if:
.TP
.BR EINVAL
The
.IR sem
argument does not refer to a valid semaphore.
.LP
.IR "The following sections are informative."
.SH EXAMPLES
See
.IR "\fIsem_timedwait\fR\^(\|)".
.SH "APPLICATION USAGE"
None.
.SH RATIONALE
None.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.IR "\fIsemctl\fR\^(\|)",
.IR "\fIsemget\fR\^(\|)",
.IR "\fIsemop\fR\^(\|)",
.IR "\fIsem_timedwait\fR\^(\|)",
.IR "\fIsem_trywait\fR\^(\|)"
.P
The Base Definitions volume of POSIX.1\(hy2008,
.IR "Section 4.11" ", " "Memory Synchronization",
.IR "\fB<semaphore.h>\fP"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, Copyright (C) 2013 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
(This is POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.unix.org/online.html .

Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
