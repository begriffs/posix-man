'\" et
.TH CTIME "3" 2013 "IEEE/The Open Group" "POSIX Programmer's Manual"

.SH NAME
ctime,
ctime_r
\(em convert a time value to a date and time string
.SH SYNOPSIS
.LP
.nf
#include <time.h>
.P
char *ctime(const time_t *\fIclock\fP);
char *ctime_r(const time_t *\fIclock\fP, char *\fIbuf\fP);
.fi
.SH DESCRIPTION
For
\fIctime\fR():
The functionality described on this reference page is aligned with the
ISO\ C standard. Any conflict between the requirements described here and the
ISO\ C standard is unintentional. This volume of POSIX.1\(hy2008 defers to the ISO\ C standard.
.P
The
\fIctime\fR()
function shall convert the time pointed to by
.IR clock ,
representing time in seconds since the Epoch, to local time in the form
of a string. It shall be equivalent to:
.sp
.RS 4
.nf
\fB
asctime(localtime(clock))
.fi \fR
.P
.RE
.P
The
\fIasctime\fR(),
\fIctime\fR(),
\fIgmtime\fR(),
and
\fIlocaltime\fR()
functions shall return values in one of two static objects: a
broken-down time structure and an array of
.BR char .
Execution of any of the functions may overwrite the information
returned in either of these objects by any of the other functions.
.P
The
\fIctime\fR()
function need not be thread-safe.
.P
The
\fIctime_r\fR()
function shall convert the calendar time pointed to by
.IR clock
to local time in exactly the same form as
\fIctime\fR()
and put the string into the array pointed to by
.IR buf
(which shall be at least 26 bytes in size) and return
.IR buf .
.P
Unlike
\fIctime\fR(),
the
\fIctime_r\fR()
function is not required to set
.IR tzname .
If
\fIctime_r\fR()
does not set
.IR tzname ,
it shall not set
.IR daylight
and shall not set
.IR timezone .
.SH "RETURN VALUE"
The
\fIctime\fR()
function shall return the pointer returned by
\fIasctime\fR()
with that broken-down time as an argument.
.P
Upon successful completion,
\fIctime_r\fR()
shall return a pointer to the string pointed to by
.IR buf .
When an error is encountered, a null pointer shall be returned.
.SH ERRORS
No errors are defined.
.LP
.IR "The following sections are informative."
.SH EXAMPLES
None.
.SH "APPLICATION USAGE"
These functions are included only for compatibility with older
implementations. They have undefined behavior if the resulting string
would be too long, so the use of these functions should be discouraged.
On implementations that do not detect output string length overflow, it
is possible to overflow the output buffers in such a way as to cause
applications to fail, or possible system security violations. Also,
these functions do not support localized date and time formats. To
avoid these problems, applications should use
\fIstrftime\fR()
to generate strings from broken-down times.
.P
Values for the broken-down time structure can be obtained by calling
\fIgmtime\fR()
or
\fIlocaltime\fR().
.P
The
\fIctime_r\fR()
function is thread-safe and shall return values in a user-supplied
buffer instead of possibly using a static data area that may be
overwritten by each call.
.P
Attempts to use
\fIctime\fR()
or
\fIctime_r\fR()
for times before the Epoch or for times beyond the year 9999 produce
undefined results. Refer to
.IR "\fIasctime\fR\^(\|)".
.SH RATIONALE
The standard developers decided to mark the
\fIctime\fR()
and
\fIctime_r\fR()
functions obsolescent even though they are in the ISO\ C standard due to the
possibility of buffer overflow. The ISO\ C standard also provides the
\fIstrftime\fR()
function which can be used to avoid these problems.
.SH "FUTURE DIRECTIONS"
These functions may be removed in a future version.
.SH "SEE ALSO"
.IR "\fIasctime\fR\^(\|)",
.IR "\fIclock\fR\^(\|)",
.IR "\fIdifftime\fR\^(\|)",
.IR "\fIgmtime\fR\^(\|)",
.IR "\fIlocaltime\fR\^(\|)",
.IR "\fImktime\fR\^(\|)",
.IR "\fIstrftime\fR\^(\|)",
.IR "\fIstrptime\fR\^(\|)",
.IR "\fItime\fR\^(\|)",
.IR "\fIutime\fR\^(\|)"
.P
The Base Definitions volume of POSIX.1\(hy2008,
.IR "\fB<time.h>\fP"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, Copyright (C) 2013 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
(This is POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.unix.org/online.html .

Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
