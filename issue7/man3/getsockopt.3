'\" et
.TH GETSOCKOPT "3" 2013 "IEEE/The Open Group" "POSIX Programmer's Manual"

.SH NAME
getsockopt
\(em get the socket options
.SH SYNOPSIS
.LP
.nf
#include <sys/socket.h>
.P
int getsockopt(int \fIsocket\fP, int \fIlevel\fP, int \fIoption_name,\fP
    void *restrict \fIoption_value\fP, socklen_t *restrict \fIoption_len\fP);
.fi
.SH DESCRIPTION
The
\fIgetsockopt\fR()
function manipulates options associated with a socket.
.P
The
\fIgetsockopt\fR()
function shall retrieve the value for the option specified by the
.IR option_name
argument for the socket specified by the
.IR socket
argument. If the size of the option value is greater than
.IR option_len ,
the value stored in the object pointed to by the
.IR option_value
argument shall be silently truncated. Otherwise, the object pointed to
by the
.IR option_len
argument shall be modified to indicate the actual length of the value.
.P
The
.IR level
argument specifies the protocol level at which the option resides. To
retrieve options at the socket level, specify the
.IR level
argument as SOL_SOCKET. To retrieve options at other levels, supply the
appropriate level identifier for the protocol controlling the option.
For example, to indicate that an option is interpreted by the TCP
(Transmission Control Protocol), set
.IR level
to IPPROTO_TCP as defined in the
.IR <netinet/in.h> 
header.
.P
The socket in use may require the process to have appropriate
privileges to use the
\fIgetsockopt\fR()
function.
.P
The
.IR option_name
argument specifies a single option to be retrieved. It can be one of
the socket-level options defined in
.IR "\fB<sys_socket.h>\fP"
and described in
.IR "Section 2.10.16" ", " "Use of Options".
.SH "RETURN VALUE"
Upon successful completion,
\fIgetsockopt\fR()
shall return 0; otherwise, \(mi1 shall be returned and
.IR errno
set to indicate the error.
.SH ERRORS
The
\fIgetsockopt\fR()
function shall fail if:
.TP
.BR EBADF
The
.IR socket
argument is not a valid file descriptor.
.TP
.BR EINVAL
The specified option is invalid at the specified socket level.
.TP
.BR ENOPROTOOPT
.br
The option is not supported by the protocol.
.TP
.BR ENOTSOCK
The
.IR socket
argument does not refer to a socket.
.P
The
\fIgetsockopt\fR()
function may fail if:
.TP
.BR EACCES
The calling process does not have appropriate privileges.
.TP
.BR EINVAL
The socket has been shut down.
.TP
.BR ENOBUFS
Insufficient resources are available in the system to complete the
function.
.LP
.IR "The following sections are informative."
.SH "EXAMPLES"
None.
.SH "APPLICATION USAGE"
None.
.SH "RATIONALE"
None.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.IR "Section 2.10.16" ", " "Use of Options",
.IR "\fIbind\fR\^(\|)",
.IR "\fIclose\fR\^(\|)",
.IR "\fIendprotoent\fR\^(\|)",
.IR "\fIsetsockopt\fR\^(\|)",
.IR "\fIsocket\fR\^(\|)"
.P
The Base Definitions volume of POSIX.1\(hy2008,
.IR "\fB<sys_socket.h>\fP",
.IR "\fB<netinet_in.h>\fP"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, Copyright (C) 2013 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
(This is POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.unix.org/online.html .

Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
