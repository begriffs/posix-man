'\" et
.TH SEM_TRYWAIT "3" 2013 "IEEE/The Open Group" "POSIX Programmer's Manual"

.SH NAME
sem_trywait,
sem_wait
\(em lock a semaphore
.SH SYNOPSIS
.LP
.nf
#include <semaphore.h>
.P
int sem_trywait(sem_t *\fIsem\fP);
int sem_wait(sem_t *\fIsem\fP);
.fi
.SH DESCRIPTION
The
\fIsem_trywait\fR()
function shall lock the semaphore referenced by
.IR sem
only if the semaphore is currently not locked; that is, if the
semaphore value is currently positive. Otherwise, it shall not lock
the semaphore.
.P
The
\fIsem_wait\fR()
function shall lock the semaphore referenced by
.IR sem
by performing a semaphore lock operation on that semaphore. If the
semaphore value is currently zero, then the calling thread shall not
return from the call to
\fIsem_wait\fR()
until it either locks the semaphore or the call is interrupted by a
signal.
.P
Upon successful return, the state of the semaphore shall be locked and
shall remain locked until the
\fIsem_post\fR()
function is executed and returns successfully.
.P
The
\fIsem_wait\fR()
function is interruptible by the delivery of a signal.
.SH "RETURN VALUE"
The
\fIsem_trywait\fR()
and
\fIsem_wait\fR()
functions shall return zero if the calling process successfully
performed the semaphore lock operation on the semaphore designated by
.IR sem .
If the call was unsuccessful, the state of the semaphore shall be
unchanged, and the function shall return a value of \(mi1 and set
.IR errno
to indicate the error.
.SH ERRORS
The
\fIsem_trywait\fR()
function shall fail if:
.TP
.BR EAGAIN
The semaphore was already locked, so it cannot be immediately locked by
the
\fIsem_trywait\fR()
operation.
.P
The
\fIsem_trywait\fR()
and
\fIsem_wait\fR()
functions may fail if:
.TP
.BR EDEADLK
A deadlock condition was detected.
.TP
.BR EINTR
A signal interrupted this function.
.TP
.BR EINVAL
The
.IR sem
argument does not refer to a valid semaphore.
.LP
.IR "The following sections are informative."
.SH EXAMPLES
None.
.SH "APPLICATION USAGE"
Applications using these functions may be subject to priority inversion,
as discussed in the Base Definitions volume of POSIX.1\(hy2008,
.IR "Section 3.287" ", " "Priority Inversion".
.SH RATIONALE
None.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.IR "\fIsemctl\fR\^(\|)",
.IR "\fIsemget\fR\^(\|)",
.IR "\fIsemop\fR\^(\|)",
.IR "\fIsem_post\fR\^(\|)",
.IR "\fIsem_timedwait\fR\^(\|)"
.P
The Base Definitions volume of POSIX.1\(hy2008,
.IR "Section 3.287" ", " "Priority Inversion",
.IR "Section 4.11" ", " "Memory Synchronization",
.IR "\fB<semaphore.h>\fP"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, Copyright (C) 2013 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
(This is POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.unix.org/online.html .

Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
