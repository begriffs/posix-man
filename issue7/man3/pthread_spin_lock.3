'\" et
.TH PTHREAD_SPIN_LOCK "3" 2013 "IEEE/The Open Group" "POSIX Programmer's Manual"

.SH NAME
pthread_spin_lock,
pthread_spin_trylock
\(em lock a spin lock object
.SH SYNOPSIS
.LP
.nf
#include <pthread.h>
.P
int pthread_spin_lock(pthread_spinlock_t *\fIlock\fP);
int pthread_spin_trylock(pthread_spinlock_t *\fIlock\fP);
.fi
.SH DESCRIPTION
The
\fIpthread_spin_lock\fR()
function shall lock the spin lock referenced by
.IR lock .
The calling thread shall acquire the lock if it is not held by another
thread. Otherwise, the thread shall spin (that is, shall not return
from the
\fIpthread_spin_lock\fR()
call) until the lock becomes available. The results are undefined if
the calling thread holds the lock at the time the call is made. The
\fIpthread_spin_trylock\fR()
function shall lock the spin lock referenced by
.IR lock
if it is not held by any thread. Otherwise, the function shall fail.
.P
The results are undefined if any of these functions is called with an
uninitialized spin lock.
.SH "RETURN VALUE"
Upon successful completion, these functions shall return zero;
otherwise, an error number shall be returned to indicate the error.
.SH ERRORS
The
\fIpthread_spin_lock\fR()
function may fail if:
.TP
.BR EDEADLK
A deadlock condition was detected.
.P
The
\fIpthread_spin_trylock\fR()
function shall fail if:
.TP
.BR EBUSY
A thread currently holds the lock.
.P
These functions shall not return an error code of
.BR [EINTR] .
.LP
.IR "The following sections are informative."
.SH EXAMPLES
None.
.SH "APPLICATION USAGE"
Applications using this function may be subject to priority inversion,
as discussed in the Base Definitions volume of POSIX.1\(hy2008,
.IR "Section 3.287" ", " "Priority Inversion".
.SH RATIONALE
If an implementation detects that the value specified by the
.IR lock
argument to
\fIpthread_spin_lock\fR()
or
\fIpthread_spin_trylock\fR()
does not refer to an initialized spin lock object, it is recommended
that the function should fail and report an
.BR [EINVAL] 
error.
.P
If an implementation detects that the value specified by the
.IR lock
argument to
\fIpthread_spin_lock\fR()
refers to a spin lock object for which the calling thread already
holds the lock, it is recommended that the function should fail
and report an
.BR [EDEADLK] 
error.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.IR "\fIpthread_spin_destroy\fR\^(\|)",
.IR "\fIpthread_spin_unlock\fR\^(\|)"
.P
The Base Definitions volume of POSIX.1\(hy2008,
.IR "Section 3.287" ", " "Priority Inversion",
.IR "Section 4.11" ", " "Memory Synchronization",
.IR "\fB<pthread.h>\fP"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, Copyright (C) 2013 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
(This is POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.unix.org/online.html .

Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
