'\" et
.TH MBRLEN "3" 2013 "IEEE/The Open Group" "POSIX Programmer's Manual"

.SH NAME
mbrlen
\(em get number of bytes in a character (restartable)
.SH SYNOPSIS
.LP
.nf
#include <wchar.h>
.P
size_t mbrlen(const char *restrict \fIs\fP, size_t \fIn\fP,
    mbstate_t *restrict \fIps\fP);
.fi
.SH DESCRIPTION
The functionality described on this reference page is aligned with the
ISO\ C standard. Any conflict between the requirements described here and the
ISO\ C standard is unintentional. This volume of POSIX.1\(hy2008 defers to the ISO\ C standard.
.P
If
.IR s
is not a null pointer,
\fImbrlen\fR()
shall determine the number of bytes constituting the character pointed
to by
.IR s .
It shall be equivalent to:
.sp
.RS 4
.nf
\fB
mbstate_t internal;
mbrtowc(NULL, s, n, ps != NULL ? ps : &internal);
.fi \fR
.P
.RE
.P
If
.IR ps
is a null pointer, the
\fImbrlen\fR()
function shall use its own internal
.BR mbstate_t
object, which is initialized at program start-up to the initial
conversion state. Otherwise, the
.BR mbstate_t
object pointed to by
.IR ps
shall be used to completely describe the current conversion state of
the associated character sequence. The implementation shall behave as
if no function defined in this volume of POSIX.1\(hy2008 calls
\fImbrlen\fR().
.P
The behavior of this function is affected by the
.IR LC_CTYPE
category of the current locale.
.P
The
\fImbrlen\fR()
function need not be thread-safe if called with a NULL
.IR ps
argument.
.P
The
\fImbrlen\fR()
function shall not change the setting of
.IR errno
if successful.
.SH "RETURN VALUE"
The
\fImbrlen\fR()
function shall return the first of the following that applies:
.IP 0 12
If the next
.IR n
or fewer bytes complete the character that corresponds to the null
wide character.
.IP "\fIpositive\fP" 12
If the next
.IR n
or fewer bytes complete a valid character; the value returned shall
be the number of bytes that complete the character.
.IP "(\fBsize_t\fP)\(mi2" 12
If the next
.IR n
bytes contribute to an incomplete but potentially valid character, and
all
.IR n
bytes have been processed. When
.IR n
has at least the value of the
{MB_CUR_MAX}
macro, this case can only occur if
.IR s
points at a sequence of redundant shift sequences (for implementations
with state-dependent encodings).
.IP "(\fBsize_t\fP)\(mi1" 12
If an encoding error occurs, in which case the next
.IR n
or fewer bytes do not contribute to a complete and valid character. In
this case,
.BR [EILSEQ] 
shall be stored in
.IR errno
and the conversion state is undefined.
.SH ERRORS
The
\fImbrlen\fR()
function shall fail if:
.TP
.BR EILSEQ
An invalid character sequence is detected.
.P
The
\fImbrlen\fR()
function may fail if:
.TP
.BR EINVAL
.IR ps
points to an object that contains an invalid conversion state.
.LP
.IR "The following sections are informative."
.SH EXAMPLES
None.
.SH "APPLICATION USAGE"
None.
.SH RATIONALE
None.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.IR "\fImbsinit\fR\^(\|)",
.IR "\fImbrtowc\fR\^(\|)"
.P
The Base Definitions volume of POSIX.1\(hy2008,
.IR "\fB<wchar.h>\fP"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, Copyright (C) 2013 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
(This is POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.unix.org/online.html .

Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
