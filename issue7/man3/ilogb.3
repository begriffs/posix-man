'\" et
.TH ILOGB "3" 2013 "IEEE/The Open Group" "POSIX Programmer's Manual"

.EQ
delim $$
.EN
.SH NAME
ilogb,
ilogbf,
ilogbl
\(em return an unbiased exponent
.SH SYNOPSIS
.LP
.nf
#include <math.h>
.P
int ilogb(double \fIx\fP);
int ilogbf(float \fIx\fP);
int ilogbl(long double \fIx\fP);
.fi
.SH DESCRIPTION
The functionality described on this reference page is aligned with the
ISO\ C standard. Any conflict between the requirements described here and the
ISO\ C standard is unintentional. This volume of POSIX.1\(hy2008 defers to the ISO\ C standard.
.P
These functions shall return the exponent part of their argument
.IR x .
Formally, the return value is the integral part of $log sub{r}|x|$ as a
signed integral value, for non-zero
.IR x ,
where
.IR r
is the radix of the machine's floating-point arithmetic, which is the
value of FLT_RADIX defined in
.IR <float.h> .
.P
An application wishing to check for error situations should set
.IR errno
to zero and call
.IR feclearexcept (FE_ALL_EXCEPT)
before calling these functions. On return, if
.IR errno
is non-zero or \fIfetestexcept\fR(FE_INVALID | FE_DIVBYZERO |
FE_OVERFLOW | FE_UNDERFLOW) is non-zero, an error has occurred.
.SH "RETURN VALUE"
Upon successful completion, these functions shall return the exponent
part of
.IR x
as a signed integer value. They are equivalent to calling the
corresponding
\fIlogb\fR()
function and casting the returned value to type
.BR int .
.P
If
.IR x
is 0, the value FP_ILOGB0 shall be returned.
On XSI-conformant systems, a domain error shall occur;
.br
otherwise, a
domain
error may occur.
.P
If
.IR x
is \(+-Inf, the value
{INT_MAX}
shall be returned.
On XSI-conformant systems, a domain error shall occur;
.br
otherwise, a
domain
error may occur.
.P
If
.IR x
is a NaN, the value FP_ILOGBNAN shall be returned.
On XSI-conformant systems, a domain error shall occur;
.br
otherwise, a
domain
error may occur.
.P
If the correct value is greater than
{INT_MAX},
a domain error shall occur and
an unspecified value shall be returned.
On XSI-conformant systems, a domain error shall occur and
{INT_MAX}
shall be returned.
.P
If the correct value is less than
{INT_MIN},
a domain error shall occur and
an unspecified value shall be returned.
On XSI-conformant systems, a domain error shall occur and
{INT_MIN}
shall be returned.
.SH ERRORS
These functions shall fail if:
.IP "Domain\ Error" 12
The correct value is not representable as an integer.
.RS 12 
.P
The
.IR x
argument is zero, NaN, or \(+-Inf.
.P
If the integer expression (\fImath_errhandling\fR & MATH_ERRNO) is
non-zero, then
.IR errno
shall be set to
.BR [EDOM] .
If the integer expression (\fImath_errhandling\fR & MATH_ERREXCEPT) is
non-zero, then the invalid floating-point exception shall be raised.
.RE
.P
These functions may fail if:
.IP "Domain\ Error" 12
The
.IR x
argument is zero, NaN, or \(+-Inf.
.RS 12 
.P
If the integer expression (\fImath_errhandling\fR & MATH_ERRNO) is
non-zero, then
.IR errno
shall be set to
.BR [EDOM] .
If the integer expression (\fImath_errhandling\fR & MATH_ERREXCEPT) is
non-zero, then the invalid floating-point exception shall be raised.
.RE
.LP
.IR "The following sections are informative."
.SH EXAMPLES
None.
.SH "APPLICATION USAGE"
On error, the expressions (\fImath_errhandling\fR & MATH_ERRNO) and
(\fImath_errhandling\fR & MATH_ERREXCEPT) are independent of each
other, but at least one of them must be non-zero.
.SH RATIONALE
The errors come from taking the expected floating-point value and
converting it to
.BR int ,
which is an invalid operation in IEEE\ Std\ 754\(hy1985 (since overflow, infinity, and
NaN are not representable in a type
.BR int ),
so should be a domain error.
.P
There are no known implementations that overflow. For overflow to
happen,
{INT_MAX}
must be less than LDBL_MAX_EXP*\fIlog2\fP(FLT_RADIX) or
{INT_MIN}
must be greater than LDBL_MIN_EXP*\fIlog2\fP(FLT_RADIX) if subnormals
are not supported, or
{INT_MIN}
must be greater than (LDBL_MIN_EXP-LDBL_MANT_DIG)*\fIlog2\fP(FLT_RADIX)
if subnormals are supported.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.IR "\fIfeclearexcept\fR\^(\|)",
.IR "\fIfetestexcept\fR\^(\|)",
.IR "\fIlogb\fR\^(\|)",
.IR "\fIscalbln\fR\^(\|)"
.P
The Base Definitions volume of POSIX.1\(hy2008,
.IR "Section 4.19" ", " "Treatment of Error Conditions for Mathematical Functions",
.IR "\fB<float.h>\fP",
.IR "\fB<math.h>\fP"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, Copyright (C) 2013 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
(This is POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.unix.org/online.html .

Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
