'\" et
.TH FSEEK "3" 2013 "IEEE/The Open Group" "POSIX Programmer's Manual"

.SH NAME
fseek,
fseeko
\(em reposition a file-position indicator in a stream
.SH SYNOPSIS
.LP
.nf
#include <stdio.h>
.P
int fseek(FILE *\fIstream\fP, long \fIoffset\fP, int \fIwhence\fP);
int fseeko(FILE *\fIstream\fP, off_t \fIoffset\fP, int \fIwhence\fP);
.fi
.SH DESCRIPTION
The functionality described on this reference page is aligned with the
ISO\ C standard. Any conflict between the requirements described here and the
ISO\ C standard is unintentional. This volume of POSIX.1\(hy2008 defers to the ISO\ C standard.
.P
The
\fIfseek\fR()
function shall set the file-position indicator for the stream pointed
to by
.IR stream .
If a read or write error occurs, the error indicator for the stream
shall be set and
\fIfseek\fR()
fails.
.P
The new position, measured in bytes from the beginning of the file,
shall be obtained by adding
.IR offset
to the position specified by
.IR whence .
The specified point is the beginning of the file for SEEK_SET, the
current value of the file-position indicator for SEEK_CUR, or
end-of-file for SEEK_END.
.P
If the stream is to be used with wide-character input/output functions,
the application shall ensure that
.IR offset
is either 0 or a value returned by an earlier call to
\fIftell\fR()
on the same stream and
.IR whence
is SEEK_SET.
.P
A successful call to
\fIfseek\fR()
shall clear the end-of-file indicator for the stream and undo any
effects of
\fIungetc\fR()
and
\fIungetwc\fR()
on the same stream. After an
\fIfseek\fR()
call, the next operation on an update stream may be either input or
output.
.P
If the most recent operation, other than
\fIftell\fR(),
on a given stream is
\fIfflush\fR(),
the file offset in the underlying open file description shall be
adjusted to reflect the location specified by
\fIfseek\fR().
.P
The
\fIfseek\fR()
function shall allow the file-position indicator to be set beyond the
end of existing data in the file. If data is later written at this
point, subsequent reads of data in the gap shall return bytes with the
value 0 until data is actually written into the gap.
.P
The behavior of
\fIfseek\fR()
on devices which are incapable of seeking is implementation-defined.
The value of the file offset associated with such a device is
undefined.
.P
If the stream is writable and buffered data had not been written to the
underlying file,
\fIfseek\fR()
shall cause the unwritten data to be written to the file and shall mark
the last data modification and last file status change timestamps
of the file for update.
.P
In a locale with state-dependent encoding, whether
\fIfseek\fR()
restores the stream's shift state is implementation-defined.
.P
The
\fIfseeko\fR()
function shall be equivalent to the
\fIfseek\fR()
function except that the
.IR offset
argument is of type
.BR off_t .
.SH "RETURN VALUE"
The
\fIfseek\fR()
and
\fIfseeko\fR()
functions shall return 0 if they succeed.
.P
Otherwise, they shall return \(mi1 and set
.IR errno
to indicate the error.
.SH ERRORS
The
\fIfseek\fR()
and
\fIfseeko\fR()
functions shall fail if,
either the
.IR stream
is unbuffered or the
.IR stream 's
buffer needed to be flushed, and the call to
\fIfseek\fR()
or
\fIfseeko\fR()
causes an underlying
\fIlseek\fR()
or
\fIwrite\fR()
to be invoked, and:
.TP
.BR EAGAIN
The O_NONBLOCK flag is set for the file descriptor and the thread
would be delayed in the write operation.
.TP
.BR EBADF
The file descriptor underlying the stream file is not open for writing
or the stream's buffer needed to be flushed and the file is not open.
.TP
.BR EFBIG
An attempt was made to write a file that exceeds the maximum file size.
.TP
.BR EFBIG
An attempt was made to write a file that exceeds the file size
limit of the process.
.TP
.BR EFBIG
The file is a regular file and an attempt was made to write at or
beyond the offset maximum associated with the corresponding stream.
.TP
.BR EINTR
The write operation was terminated due to the receipt of a signal,
and no data was transferred.
.TP
.BR EINVAL
The
.IR whence
argument is invalid. The resulting file-position indicator would be
set to a negative value.
.TP
.BR EIO
A physical I/O error has occurred, or the process is a member of a
background process group attempting to perform a
\fIwrite\fR()
to its controlling terminal, TOSTOP is set, the calling thread is not
blocking SIGTTOU, the process is not ignoring SIGTTOU, and the process
group of the process is orphaned.
This error may also be returned under implementation-defined conditions.
.TP
.BR ENOSPC
There was no free space remaining on the device containing the file.
.TP
.BR EOVERFLOW
For
\fIfseek\fR(),
the resulting file offset would be a value which cannot be represented
correctly in an object of type
.BR long .
.TP
.BR EOVERFLOW
For
\fIfseeko\fR(),
the resulting file offset would be a value which cannot be represented
correctly in an object of type
.BR off_t .
.TP
.BR EPIPE
An attempt was made to write to a pipe or FIFO that is not open for
reading by any process; a SIGPIPE
signal shall also be sent to the thread.
.TP
.BR ESPIPE
The file descriptor underlying
.IR stream
is associated with a pipe, FIFO, or socket.
.P
The
\fIfseek\fR()
and
\fIfseeko\fR()
functions may fail if:
.TP
.BR ENXIO
A request was made of a nonexistent device, or the request was outside
the capabilities of the device.
.LP
.IR "The following sections are informative."
.SH EXAMPLES
None.
.SH "APPLICATION USAGE"
None.
.SH RATIONALE
None.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.IR "Section 2.5" ", " "Standard I/O Streams",
.IR "\fIfopen\fR\^(\|)",
.IR "\fIfsetpos\fR\^(\|)",
.IR "\fIftell\fR\^(\|)",
.IR "\fIgetrlimit\fR\^(\|)",
.IR "\fIlseek\fR\^(\|)",
.IR "\fIrewind\fR\^(\|)",
.IR "\fIulimit\fR\^(\|)",
.IR "\fIungetc\fR\^(\|)",
.IR "\fIwrite\fR\^(\|)"
.P
The Base Definitions volume of POSIX.1\(hy2008,
.IR "\fB<stdio.h>\fP"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, Copyright (C) 2013 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
(This is POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.unix.org/online.html .

Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
