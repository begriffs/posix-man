'\" et
.TH FTOK "3" 2013 "IEEE/The Open Group" "POSIX Programmer's Manual"

.SH NAME
ftok
\(em generate an IPC key
.SH SYNOPSIS
.LP
.nf
#include <sys/ipc.h>
.P
key_t ftok(const char *\fIpath\fP, int \fIid\fP);
.fi
.SH DESCRIPTION
The
\fIftok\fR()
function shall return a key based on
.IR path
and
.IR id
that is usable in subsequent calls to
\fImsgget\fR(),
\fIsemget\fR(),
and
\fIshmget\fR().
The application shall ensure that the
.IR path
argument is the pathname of an existing file that the process is
able to
\fIstat\fR(),
with the exception that if
\fIstat\fR()
would fail with
.BR [EOVERFLOW] 
due to file size,
\fIftok\fR()
shall still succeed.
.P
The
\fIftok\fR()
function shall return the same key value for all paths that name the
same file, when called with the same
.IR id
value, and should return different key values when called with different
.IR id
values or with paths that name different files existing on the same
file system at the same time. It is unspecified whether
\fIftok\fR()
shall return the same key value when called again after the file named
by
.IR path
is removed and recreated with the same name.
.P
Only the low-order 8-bits of
.IR id
are significant. The behavior of
\fIftok\fR()
is unspecified if these bits are 0.
.SH "RETURN VALUE"
Upon successful completion,
\fIftok\fR()
shall return a key. Otherwise,
\fIftok\fR()
shall return (\fBkey_t\fP)\(mi1 and set
.IR errno
to indicate the error.
.SH ERRORS
The
\fIftok\fR()
function shall fail if:
.TP
.BR EACCES
Search permission is denied for a component of the path prefix.
.TP
.BR EIO
An error occurred while reading from the file system.
.TP
.BR ELOOP
A loop exists in symbolic links encountered during resolution of the
.IR path
argument.
.TP
.BR ENAMETOOLONG
.br
The length of a component of a pathname is longer than
{NAME_MAX}.
.TP
.BR ENOENT
A component of
.IR path
does not name an existing file or
.IR path
is an empty string.
.TP
.BR ENOTDIR
A component of the path prefix names an existing file that is neither
a directory nor a symbolic link to a directory, or the
.IR path
argument contains at least one non-\c
<slash>
character and ends with one or more trailing
<slash>
characters and the last pathname component names an existing file
that is neither a directory nor a symbolic link to a directory.
.P
The
\fIftok\fR()
function may fail if:
.TP
.BR ELOOP
More than
{SYMLOOP_MAX}
symbolic links were encountered during resolution of the
.IR path
argument.
.TP
.BR ENAMETOOLONG
.br
The length of a pathname exceeds
{PATH_MAX},
or pathname resolution of a symbolic link produced an intermediate
result with a length that exceeds
{PATH_MAX}.
.LP
.IR "The following sections are informative."
.SH EXAMPLES
.SS "Getting an IPC Key"
.P
The following example gets a key based on the pathname
.BR /tmp
and the ID value
.IR a .
It also assigns the value of the resulting key to the
.IR semkey
variable so that it will be available to a later call to
\fIsemget\fR(),
\fImsgget\fR(),
or
\fIshmget\fR().
.sp
.RS 4
.nf
\fB
#include <sys/ipc.h>
\&...
key_t semkey;
.P
if ((semkey = ftok("/tmp", 'a')) == (key_t) -1) {
    perror("IPC error: ftok"); exit(1);
}
.fi \fR
.P
.RE
.SH "APPLICATION USAGE"
For maximum portability,
.IR id
should be a single-byte character.
.P
Applications should not assume that the resulting key value is unique.
.SH RATIONALE
None.
.SH "FUTURE DIRECTIONS"
Future versions of this standard may add new interfaces to provide
unique keys.
.SH "SEE ALSO"
.IR "\fImsgget\fR\^(\|)",
.IR "\fIsemget\fR\^(\|)",
.IR "\fIshmget\fR\^(\|)"
.P
The Base Definitions volume of POSIX.1\(hy2008,
.IR "\fB<sys_ipc.h>\fP"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, Copyright (C) 2013 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
(This is POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.unix.org/online.html .

Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
