'\" et
.TH TMPFILE "3" 2013 "IEEE/The Open Group" "POSIX Programmer's Manual"

.SH NAME
tmpfile
\(em create a temporary file
.SH SYNOPSIS
.LP
.nf
#include <stdio.h>
.P
FILE *tmpfile(void);
.fi
.SH DESCRIPTION
The functionality described on this reference page is aligned with the
ISO\ C standard. Any conflict between the requirements described here and the
ISO\ C standard is unintentional. This volume of POSIX.1\(hy2008 defers to the ISO\ C standard.
.P
The
\fItmpfile\fR()
function shall create a temporary file and open a corresponding
stream. The file shall be automatically deleted when all references
to the file are closed. The file is opened as in
\fIfopen\fR()
for update (\fIw\fP+), except that implementations may restrict the
permissions, either by clearing the file mode bits or setting them
to the value S_IRUSR | S_IWUSR.
.P
In some implementations, a permanent file may be left behind if
the process calling
\fItmpfile\fR()
is killed while it is processing a call to
\fItmpfile\fR().
.P
An error message may be written to standard error if the stream cannot
be opened.
.SH "RETURN VALUE"
Upon successful completion,
\fItmpfile\fR()
shall return a pointer to the stream of the file that is created.
Otherwise, it shall return a null pointer
and set
.IR errno
to indicate the error.
.SH ERRORS
The
\fItmpfile\fR()
function shall fail if:
.TP
.BR EINTR
A signal was caught during
\fItmpfile\fR().
.TP
.BR EMFILE
All file descriptors available to the process are currently open.
.TP
.BR EMFILE
{STREAM_MAX}
streams are currently open in the calling process.
.TP
.BR ENFILE
The maximum allowable number of files is currently open in the system.
.TP
.BR ENOSPC
The directory or file system which would contain the new file cannot be
expanded.
.TP
.BR EOVERFLOW
The file is a regular file and the size of the file cannot be
represented correctly in an object of type
.BR off_t .
.P
The
\fItmpfile\fR()
function may fail if:
.TP
.BR EMFILE
{FOPEN_MAX}
streams are currently open in the calling process.
.TP
.BR ENOMEM
Insufficient storage space is available.
.LP
.IR "The following sections are informative."
.SH EXAMPLES
.SS "Creating a Temporary File"
.P
The following example creates a temporary file for update, and returns
a pointer to a stream for the created file in the
.IR fp
variable.
.sp
.RS 4
.nf
\fB
#include <stdio.h>
\&...
FILE *fp;
.P
fp = tmpfile ();
.fi \fR
.P
.RE
.SH "APPLICATION USAGE"
It should be possible to open at least
{TMP_MAX}
temporary files during the lifetime of the program (this limit may be
shared with
\fItmpnam\fR())
and there should be no limit on the number simultaneously open other
than this limit and any limit on the number of open file descriptors
or streams (\c
{OPEN_MAX},
{FOPEN_MAX},
{STREAM_MAX}).
.SH RATIONALE
None.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.IR "Section 2.5" ", " "Standard I/O Streams",
.IR "\fIfopen\fR\^(\|)",
.IR "\fImkdtemp\fR\^(\|)",
.IR "\fItmpnam\fR\^(\|)",
.IR "\fIunlink\fR\^(\|)"
.P
The Base Definitions volume of POSIX.1\(hy2008,
.IR "\fB<stdio.h>\fP"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, Copyright (C) 2013 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
(This is POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.unix.org/online.html .

Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
