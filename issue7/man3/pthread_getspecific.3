'\" et
.TH PTHREAD_GETSPECIFIC "3" 2013 "IEEE/The Open Group" "POSIX Programmer's Manual"

.SH NAME
pthread_getspecific,
pthread_setspecific
\(em thread-specific data management
.SH SYNOPSIS
.LP
.nf
#include <pthread.h>
.P
void *pthread_getspecific(pthread_key_t \fIkey\fP);
int pthread_setspecific(pthread_key_t \fIkey\fP, const void *\fIvalue\fP);
.fi
.SH DESCRIPTION
The
\fIpthread_getspecific\fR()
function shall return the value currently bound to the specified
.IR key
on behalf of the calling thread.
.P
The
\fIpthread_setspecific\fR()
function shall associate a thread-specific
.IR value
with a
.IR key
obtained via a previous call to
\fIpthread_key_create\fR().
Different threads may bind different values to the same key. These
values are typically pointers to blocks of dynamically allocated memory
that have been reserved for use by the calling thread.
.P
The effect of calling
\fIpthread_getspecific\fR()
or
\fIpthread_setspecific\fR()
with a
.IR key
value not obtained from
\fIpthread_key_create\fR()
or after
.IR key
has been deleted with
\fIpthread_key_delete\fR()
is undefined.
.P
Both
\fIpthread_getspecific\fR()
and
\fIpthread_setspecific\fR()
may be called from a thread-specific data destructor function. A call
to
\fIpthread_getspecific\fR()
for the thread-specific data key being destroyed shall return the value
NULL, unless the value is changed (after the destructor starts) by a
call to
\fIpthread_setspecific\fR().
Calling
\fIpthread_setspecific\fR()
from a thread-specific data destructor routine may result either in lost
storage (after at least PTHREAD_DESTRUCTOR_ITERATIONS attempts at
destruction) or in an infinite loop.
.P
Both functions may be implemented as macros.
.SH "RETURN VALUE"
The
\fIpthread_getspecific\fR()
function shall return the thread-specific data value associated
with the given
.IR key .
If no thread-specific data value is associated with
.IR key ,
then the value NULL shall be returned.
.P
If successful, the
\fIpthread_setspecific\fR()
function shall return zero; otherwise, an error number shall be
returned to indicate the error.
.SH ERRORS
No errors are returned from
\fIpthread_getspecific\fR().
.P
The
\fIpthread_setspecific\fR()
function shall fail if:
.TP
.BR ENOMEM
Insufficient memory exists to associate the non-NULL value with the key.
.P
The
\fIpthread_setspecific\fR()
function shall not return an error code of
.BR [EINTR] .
.LP
.IR "The following sections are informative."
.SH EXAMPLES
None.
.SH "APPLICATION USAGE"
None.
.SH RATIONALE
Performance and ease-of-use of
\fIpthread_getspecific\fR()
are critical for functions that rely on maintaining state in
thread-specific data. Since no errors are required to be detected by
it, and since the only error that could be detected is the use of an
invalid key, the function to
\fIpthread_getspecific\fR()
has been designed to favor speed and simplicity over error reporting.
.P
If an implementation detects that the value specified by the
.IR key
argument to
\fIpthread_setspecific\fR()
does not refer to a a key value obtained from
\fIpthread_key_create\fR()
or refers to a key that has been deleted with
\fIpthread_key_delete\fR(),
it is recommended that the function should fail and report an
.BR [EINVAL] 
error.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.IR "\fIpthread_key_create\fR\^(\|)"
.P
The Base Definitions volume of POSIX.1\(hy2008,
.IR "\fB<pthread.h>\fP"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, Copyright (C) 2013 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
(This is POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.unix.org/online.html .

Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
