'\" et
.TH A64L "3" 2013 "IEEE/The Open Group" "POSIX Programmer's Manual"

.SH NAME
a64l,
l64a
\(em convert between a 32-bit integer and a radix-64 ASCII string
.SH SYNOPSIS
.LP
.nf
#include <stdlib.h>
.P
long a64l(const char *\fIs\fP);
char *l64a(long \fIvalue\fP);
.fi
.SH DESCRIPTION
These functions maintain numbers stored in radix-64 ASCII
characters. This is a notation by which 32-bit integers can be
represented by up to six characters; each character represents a digit
in radix-64 notation. If the type
.BR long
contains more than 32 bits, only the low-order 32 bits shall be used for
these operations.
.P
The characters used to represent digits are
.BR '.' 
(dot) for 0,
.BR '/' 
for 1,
.BR '0' 
through
.BR '9' 
for [2,11],
.BR 'A' 
through
.BR 'Z' 
for [12,37], and
.BR 'a' 
through
.BR 'z' 
for [38,63].
.P
The
\fIa64l\fR()
function shall take a pointer to a radix-64 representation, in which
the first digit is the least significant, and return the corresponding
.BR long
value. If the string pointed to by
.IR s
contains more than six characters,
\fIa64l\fR()
shall use the first six. If the first six characters of the string
contain a null terminator,
\fIa64l\fR()
shall use only characters preceding the null terminator. The
\fIa64l\fR()
function shall scan the character string from left to right with the
least significant digit on the left, decoding each character as a 6-bit
radix-64 number. If the type
.BR long
contains more than 32 bits, the resulting value is sign-extended. The
behavior of
\fIa64l\fR()
is unspecified if
.IR s
is a null pointer or the string pointed to by
.IR s
was not generated by a previous call to
\fIl64a\fR().
.P
The
\fIl64a\fR()
function shall take a
.BR long
argument and return a pointer to the corresponding radix-64
representation. The behavior of
\fIl64a\fR()
is unspecified if
.IR value
is negative.
.P
The value returned by
\fIl64a\fR()
may be a pointer into a static buffer. Subsequent calls to
\fIl64a\fR()
may overwrite the buffer.
.P
The
\fIl64a\fR()
function need not be thread-safe.
.SH "RETURN VALUE"
Upon successful completion,
\fIa64l\fR()
shall return the
.BR long
value resulting from conversion of the input string. If a string
pointed to by
.IR s
is an empty string,
\fIa64l\fR()
shall return 0L.
.P
The
\fIl64a\fR()
function shall return a pointer to the radix-64 representation. If
.IR value
is 0L,
\fIl64a\fR()
shall return a pointer to an empty string.
.SH ERRORS
No errors are defined.
.LP
.IR "The following sections are informative."
.SH EXAMPLES
None.
.SH "APPLICATION USAGE"
If the type
.BR long
contains more than 32 bits, the result of
\fIa64l\fP(\fIl64a\fP(\fIx\fP)) is
.IR x
in the low-order 32 bits.
.SH RATIONALE
This is not the same encoding as used by either encoding variant
of the
.IR uuencode
utility.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.IR "\fIstrtoul\fR\^(\|)"
.P
The Base Definitions volume of POSIX.1\(hy2008,
.IR "\fB<stdlib.h>\fP"
.P
The Shell and Utilities volume of POSIX.1\(hy2008,
.IR "\fIuuencode\fR\^"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, Copyright (C) 2013 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
(This is POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.unix.org/online.html .

Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
