'\" et
.TH DIRNAME "3" 2013 "IEEE/The Open Group" "POSIX Programmer's Manual"

.SH NAME
dirname
\(em report the parent directory name of a file pathname
.SH SYNOPSIS
.LP
.nf
#include <libgen.h>
.P
char *dirname(char *\fIpath\fP);
.fi
.SH DESCRIPTION
The
\fIdirname\fR()
function shall take a pointer to a character string that contains a
pathname, and return a pointer to a string that is a pathname of the
parent directory of that file. Trailing
.BR '/' 
characters in the path are not counted as part of the path.
.P
If
.IR path
does not contain a
.BR '/' ,
then
\fIdirname\fR()
shall return a pointer to the string
.BR \(dq.\(dq .
If
.IR path
is a null pointer or points to an empty string,
\fIdirname\fR()
shall return a pointer to the string
.BR \(dq.\(dq .
.P
The
\fIdirname\fR()
function need not be thread-safe.
.SH "RETURN VALUE"
The
\fIdirname\fR()
function shall return a pointer to a string that is the parent
directory of
.IR path .
If
.IR path
is a null pointer or points to an empty string, a pointer to a string
.BR \(dq.\(dq 
is returned.
.P
The
\fIdirname\fR()
function may modify the string pointed to by
.IR path ,
and may return a pointer to internal storage. The returned pointer might
be invalidated or the storage might be overwritten by a subsequent call to
\fIdirname\fR().
.SH ERRORS
No errors are defined.
.LP
.IR "The following sections are informative."
.SH EXAMPLES
The following code fragment reads a pathname, changes the current
working directory to the parent directory, and opens the file.
.sp
.RS 4
.nf
\fB
char *path = NULL, *pathcopy;
size_t buflen = 0;
ssize_t linelen = 0;
int fd;
.P
linelen = getline(&path, &buflen, stdin);
.P
path[linelen-1] = 0;
pathcopy = strdup(path);
if (chdir(dirname(pathcopy)) < 0) {
    ...
}
if ((fd = open(basename(path), O_RDONLY)) >= 0) {
    ...
    close (fd);
}
\&...
free (pathcopy);
free (path);
.fi \fR
.P
.RE
.SS "Sample Input and Output Strings for dirname(\|)"
.P
In the following table, the input string is the value pointed to by
.IR path ,
and the output string is the return value of the
\fIdirname\fR()
function.
.TS
center tab(!) box;
cB | cB
lf5 | lf5.
Input String!Output String
_
"/usr/lib"!"/usr"
"/usr/"!"/"
"usr"!"."
"/"!"/"
"."!"."
".."!"."
.TE
.SH "APPLICATION USAGE"
The
\fIdirname\fR()
and
\fIbasename\fR()
functions together yield a complete pathname. The expression
\fIdirname\fP\^(\fIpath\fP) obtains the pathname of the directory where
\fIbasename\fP\^(\fIpath\fP) is found.
.P
Since the meaning of the leading
.BR \(dq//\(dq 
is implementation-defined,
.IR dirname ("\c
.BR //foo ")
may return either
.BR \(dq//\(dq 
or
.BR '/' 
(but nothing else).
.SH RATIONALE
None.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.IR "\fIbasename\fR\^(\|)"
.P
The Base Definitions volume of POSIX.1\(hy2008,
.IR "\fB<libgen.h>\fP"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, Copyright (C) 2013 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
(This is POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.unix.org/online.html .

Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
