'\" et
.TH STRXFRM "3" 2013 "IEEE/The Open Group" "POSIX Programmer's Manual"

.SH NAME
strxfrm,
strxfrm_l
\(em string transformation
.SH SYNOPSIS
.LP
.nf
#include <string.h>
.P
size_t strxfrm(char *restrict \fIs1\fP, const char *restrict \fIs2\fP, size_t \fIn\fP);
size_t strxfrm_l(char *restrict \fIs1\fP, const char *restrict \fIs2\fP,
    size_t \fIn\fP, locale_t \fIlocale\fP);
.fi
.SH DESCRIPTION
For
\fIstrxfrm\fR():
The functionality described on this reference page is aligned with the
ISO\ C standard. Any conflict between the requirements described here and the
ISO\ C standard is unintentional. This volume of POSIX.1\(hy2008 defers to the ISO\ C standard.
.P
The
\fIstrxfrm\fR()
and
\fIstrxfrm_l\fR()
functions shall transform the string pointed to by
.IR s2
and place the resulting string into the array pointed to by
.IR s1 .
The transformation is such that if
\fIstrcmp\fR()
is applied to two transformed strings, it shall return a value greater
than, equal to, or less than 0, corresponding to the result of
\fIstrcoll\fR()
or
\fIstrcoll_l\fR(),
respectively, applied to the same two original strings
with the same locale.
No more than
.IR n
bytes are placed into the resulting array pointed to by
.IR s1 ,
including the terminating NUL character. If
.IR n
is 0,
.IR s1
is permitted to be a null pointer. If copying takes place between
objects that overlap, the behavior is undefined.
.P
The
\fIstrxfrm\fR()
and
\fIstrxfrm_l\fR()
functions shall not change the setting of
.IR errno
if successful.
.P
Since no return value is reserved to indicate an error, an
application wishing to check for error situations should set
.IR errno
to 0, then call
\fIstrxfrm\fR()
or
\fIstrxfrm_l\fR(),
then check
.IR errno .
.P
The behavior is undefined if the
.IR locale
argument to
\fIstrxfrm_l\fR()
is the special locale object LC_GLOBAL_LOCALE or is not a valid locale
object handle.
.SH "RETURN VALUE"
Upon successful completion,
\fIstrxfrm\fR()
and
\fIstrxfrm_l\fR()
shall return the length of the transformed string (not including the
terminating NUL character). If the value returned is
.IR n
or more, the contents of the array pointed to by
.IR s1
are unspecified.
.P
On error,
\fIstrxfrm\fR()
and
\fIstrxfrm_l\fR()
may set
.IR errno
but no return value is reserved to indicate an error.
.SH ERRORS
These functions may fail if:
.TP
.BR EINVAL
The string pointed to by the
.IR s2
argument contains characters outside the domain of the collating
sequence.
.LP
.IR "The following sections are informative."
.SH EXAMPLES
None.
.SH "APPLICATION USAGE"
The transformation function is such that two transformed strings can be
ordered by
\fIstrcmp\fR()
as appropriate to collating sequence information in the
current locale (category
.IR LC_COLLATE ).
.P
The fact that when
.IR n
is 0
.IR s1
is permitted to be a null pointer is useful to determine the size of
the
.IR s1
array prior to making the transformation.
.SH RATIONALE
None.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.IR "\fIstrcmp\fR\^(\|)",
.IR "\fIstrcoll\fR\^(\|)"
.P
The Base Definitions volume of POSIX.1\(hy2008,
.IR "\fB<string.h>\fP"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, Copyright (C) 2013 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
(This is POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.unix.org/online.html .

Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
