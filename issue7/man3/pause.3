'\" et
.TH PAUSE "3" 2013 "IEEE/The Open Group" "POSIX Programmer's Manual"

.SH NAME
pause
\(em suspend the thread until a signal is received
.SH SYNOPSIS
.LP
.nf
#include <unistd.h>
.P
int pause(void);
.fi
.SH DESCRIPTION
The
\fIpause\fR()
function shall suspend the calling thread until delivery of a signal
whose action is either to execute a signal-catching function or to
terminate the process.
.P
If the action is to terminate the process,
\fIpause\fR()
shall not return.
.P
If the action is to execute a signal-catching function,
\fIpause\fR()
shall return after the signal-catching function returns.
.SH "RETURN VALUE"
Since
\fIpause\fR()
suspends thread execution indefinitely unless interrupted by a signal,
there is no successful completion return value. A value of \(mi1 shall
be returned and
.IR errno
set to indicate the error.
.SH ERRORS
The
\fIpause\fR()
function shall fail if:
.TP
.BR EINTR
A signal is caught by the calling process and control is returned from
the signal-catching function.
.LP
.IR "The following sections are informative."
.SH EXAMPLES
None.
.SH "APPLICATION USAGE"
Many common uses of
\fIpause\fR()
have timing windows. The scenario involves checking a condition
related to a signal and, if the signal has not occurred, calling
\fIpause\fR().
When the signal occurs between the check and the call to
\fIpause\fR(),
the process often blocks indefinitely. The
\fIsigprocmask\fR()
and
\fIsigsuspend\fR()
functions can be used to avoid this type of problem.
.SH RATIONALE
None.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.IR "\fIsigsuspend\fR\^(\|)"
.P
The Base Definitions volume of POSIX.1\(hy2008,
.IR "\fB<unistd.h>\fP"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, Copyright (C) 2013 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
(This is POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.unix.org/online.html .

Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
