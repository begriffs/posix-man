'\" et
.TH SEM_INIT "3" 2013 "IEEE/The Open Group" "POSIX Programmer's Manual"

.SH NAME
sem_init
\(em initialize an unnamed semaphore
.SH SYNOPSIS
.LP
.nf
#include <semaphore.h>
.P
int sem_init(sem_t *\fIsem\fP, int \fIpshared\fP, unsigned \fIvalue\fP);
.fi
.SH DESCRIPTION
The
\fIsem_init\fR()
function shall initialize the unnamed semaphore referred to by
.IR sem .
The value of the initialized semaphore shall be
.IR value .
Following a successful call to
\fIsem_init\fR(),
the semaphore may be used in subsequent calls to
\fIsem_wait\fR(),
\fIsem_timedwait\fR(),
\fIsem_trywait\fR(),
\fIsem_post\fR(),
and
\fIsem_destroy\fR().
This semaphore shall remain usable until the semaphore is destroyed.
.P
If the
.IR pshared
argument has a non-zero value, then the semaphore is shared between
processes; in this case, any process that can access the semaphore
.IR sem
can use
.IR sem
for performing
\fIsem_wait\fR(),
\fIsem_timedwait\fR(),
\fIsem_trywait\fR(),
\fIsem_post\fR(),
and
\fIsem_destroy\fR()
operations.
.P
Only
.IR sem
itself may be used for performing synchronization. The result of
referring to copies of
.IR sem
in calls to
\fIsem_wait\fR(),
\fIsem_timedwait\fR(),
\fIsem_trywait\fR(),
\fIsem_post\fR(),
and
\fIsem_destroy\fR()
is undefined.
.P
If the
.IR pshared
argument is zero, then the semaphore is shared between threads of the
process; any thread in this process can use
.IR sem
for performing
\fIsem_wait\fR(),
\fIsem_timedwait\fR(),
\fIsem_trywait\fR(),
\fIsem_post\fR(),
and
\fIsem_destroy\fR()
operations. The use of the semaphore by threads other than those
created in the same process is undefined.
.P
Attempting to initialize an already initialized semaphore results in
undefined behavior.
.SH "RETURN VALUE"
Upon successful completion, the
\fIsem_init\fR()
function shall initialize the semaphore in
.IR sem
and return 0. Otherwise, it shall return \(mi1 and set
.IR errno
to indicate the error.
.SH ERRORS
The
\fIsem_init\fR()
function shall fail if:
.TP
.BR EINVAL
The
.IR value
argument exceeds
{SEM_VALUE_MAX}.
.TP
.BR ENOSPC
A resource required to initialize the semaphore has been exhausted, or
the limit on semaphores (\c
{SEM_NSEMS_MAX})
has been reached.
.TP
.BR EPERM
The process lacks appropriate privileges to initialize the
semaphore.
.LP
.IR "The following sections are informative."
.SH EXAMPLES
None.
.SH "APPLICATION USAGE"
None.
.SH RATIONALE
None.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.IR "\fIsem_destroy\fR\^(\|)",
.IR "\fIsem_post\fR\^(\|)",
.IR "\fIsem_timedwait\fR\^(\|)",
.IR "\fIsem_trywait\fR\^(\|)"
.P
The Base Definitions volume of POSIX.1\(hy2008,
.IR "\fB<semaphore.h>\fP"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, Copyright (C) 2013 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
(This is POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.unix.org/online.html .

Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
