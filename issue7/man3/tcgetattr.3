'\" et
.TH TCGETATTR "3" 2013 "IEEE/The Open Group" "POSIX Programmer's Manual"

.SH NAME
tcgetattr
\(em get the parameters associated with the terminal
.SH SYNOPSIS
.LP
.nf
#include <termios.h>
.P
int tcgetattr(int \fIfildes\fP, struct termios *\fItermios_p\fP);
.fi
.SH DESCRIPTION
The
\fItcgetattr\fR()
function shall get the parameters associated with the terminal referred
to by
.IR fildes
and store them in the
.BR termios
structure referenced by
.IR termios_p .
The
.IR fildes
argument is an open file descriptor associated with a terminal.
.P
The
.IR termios_p
argument is a pointer to a
.BR termios
structure.
.P
The
\fItcgetattr\fR()
operation is allowed from any process.
.P
If the terminal device supports different input and output baud rates,
the baud rates stored in the
.BR termios
structure returned by
\fItcgetattr\fR()
shall reflect the actual baud rates, even if they are equal. If
differing baud rates are not supported, the rate returned as the output
baud rate shall be the actual baud rate. If the terminal device does
not support split baud rates, the input baud rate stored in the
.BR termios
structure shall be the output rate (as one of the symbolic values).
.SH "RETURN VALUE"
Upon successful completion, 0 shall be returned. Otherwise, \(mi1
shall be returned and
.IR errno
set to indicate the error.
.SH ERRORS
The
\fItcgetattr\fR()
function shall fail if:
.TP
.BR EBADF
The
.IR fildes
argument is not a valid file descriptor.
.TP
.BR ENOTTY
The file associated with
.IR fildes
is not a terminal.
.LP
.IR "The following sections are informative."
.SH EXAMPLES
None.
.SH "APPLICATION USAGE"
None.
.SH RATIONALE
Care must be taken when changing the terminal attributes. Applications
should always do a
\fItcgetattr\fR(),
save the
.BR termios
structure values returned, and then do a
\fItcsetattr\fR(),
changing only the necessary fields. The application should use the
values saved from the
\fItcgetattr\fR()
to reset the terminal state whenever it is done with the terminal.
This is necessary because terminal attributes apply to the underlying
port and not to each individual open instance; that is, all processes
that have used the terminal see the latest attribute changes.
.P
A program that uses these functions should be written to catch all
signals and take other appropriate actions to ensure that when the
program terminates, whether planned or not, the terminal device's state
is restored to its original state.
.P
Existing practice dealing with error returns when only part of a
request can be honored is based on calls to the
\fIioctl\fR()
function. In historical BSD and System V implementations,
the corresponding
\fIioctl\fR()
returns zero if the requested actions were semantically correct, even
if some of the requested changes could not be made. Many existing
applications assume this behavior and would no longer work correctly if
the return value were changed from zero to \(mi1 in this case.
.P
Note that either specification has a problem. When zero is returned,
it implies everything succeeded even if some of the changes were not
made. When \(mi1 is returned, it implies everything failed even though
some of the changes were made.
.P
Applications that need all of the requested changes made to work
properly should follow
\fItcsetattr\fR()
with a call to
\fItcgetattr\fR()
and compare the appropriate field values.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.IR "\fItcsetattr\fR\^(\|)"
.P
The Base Definitions volume of POSIX.1\(hy2008,
.IR "Chapter 11" ", " "General Terminal Interface",
.IR "\fB<termios.h>\fP"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, Copyright (C) 2013 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
(This is POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.unix.org/online.html .

Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
