'\" et
.TH WCRTOMB "3" 2013 "IEEE/The Open Group" "POSIX Programmer's Manual"

.SH NAME
wcrtomb
\(em convert a wide-character code to a character (restartable)
.SH SYNOPSIS
.LP
.nf
#include <wchar.h>
.P
size_t wcrtomb(char *restrict \fIs\fP, wchar_t \fIwc\fP, mbstate_t *restrict \fIps\fP);
.fi
.SH DESCRIPTION
The functionality described on this reference page is aligned with the
ISO\ C standard. Any conflict between the requirements described here and the
ISO\ C standard is unintentional. This volume of POSIX.1\(hy2008 defers to the ISO\ C standard.
.P
If
.IR s
is a null pointer, the
\fIwcrtomb\fR()
function shall be equivalent to the call:
.sp
.RS 4
.nf
\fB
wcrtomb(\fIbuf\fP, L'\e0', \fIps\fP)
.fi \fR
.P
.RE
.P
where
.IR buf
is an internal buffer.
.P
If
.IR s
is not a null pointer, the
\fIwcrtomb\fR()
function shall determine the number of bytes needed to represent the
character that corresponds to the wide character given by
.IR wc
(including any shift sequences), and store the resulting bytes in the
array whose first element is pointed to by
.IR s .
At most
{MB_CUR_MAX}
bytes are stored. If
.IR wc
is a null wide character, a null byte shall be stored, preceded by any
shift sequence needed to restore the initial shift state. The resulting
state described shall be the initial conversion state.
.P
If
.IR ps
is a null pointer, the
\fIwcrtomb\fR()
function shall use its own internal
.BR mbstate_t
object, which is initialized at program start-up to the initial
conversion state. Otherwise, the
.BR mbstate_t
object pointed to by
.IR ps
shall be used to completely describe the current conversion state of
the associated character sequence. The implementation shall behave as
if no function defined in this volume of POSIX.1\(hy2008 calls
\fIwcrtomb\fR().
.P
The
\fIwcrtomb\fR()
function need not be thread-safe if called with a NULL
.IR ps
argument.
.P
The behavior of this function shall be affected by the
.IR LC_CTYPE
category of the current locale.
.P
The
\fIwcrtomb\fR()
function shall not change the setting of
.IR errno
if successful.
.SH "RETURN VALUE"
The
\fIwcrtomb\fR()
function shall return the number of bytes stored in the array object
(including any shift sequences). When
.IR wc
is not a valid wide character, an encoding error shall occur. In this
case, the function shall store the value of the macro
.BR [EILSEQ] 
in
.IR errno
and shall return (\fBsize_t\fP)\(mi1; the conversion state shall be
undefined.
.SH ERRORS
The
\fIwcrtomb\fR()
function shall fail if:
.TP
.BR EILSEQ
An invalid wide-character code is detected.
.P
The
\fIwcrtomb\fR()
function may fail if:
.TP
.BR EINVAL
.IR ps
points to an object that contains an invalid conversion state.
.LP
.IR "The following sections are informative."
.SH EXAMPLES
None.
.SH "APPLICATION USAGE"
None.
.SH RATIONALE
None.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.IR "\fImbsinit\fR\^(\|)",
.IR "\fIwcsrtombs\fR\^(\|)"
.P
The Base Definitions volume of POSIX.1\(hy2008,
.IR "\fB<wchar.h>\fP"
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, Copyright (C) 2013 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
(This is POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.unix.org/online.html .

Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
