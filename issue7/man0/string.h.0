'\" et
.TH string.h "0" 2013 "IEEE/The Open Group" "POSIX Programmer's Manual"

.SH NAME
string.h
\(em string operations
.SH SYNOPSIS
.LP
.nf
#include <string.h>
.fi
.SH DESCRIPTION
Some of the functionality described on this reference page extends the
ISO\ C standard. Applications shall define the appropriate feature test macro
(see the System Interfaces volume of POSIX.1\(hy2008,
.IR "Section 2.2" ", " "The Compilation Environment")
to enable the visibility of these symbols in this header.
.P
The
.IR <string.h> 
header shall define NULL and
.BR size_t
as described in
.IR <stddef.h> .
.P
The
.IR <string.h> 
header shall define the
.BR locale_t
type as described in
.IR <locale.h> .
.P
The following shall be declared as functions and may also be defined as
macros. Function prototypes shall be provided for use with ISO\ C standard
compilers.
.sp
.RS 4
.nf
\fB
void    *memccpy(void *restrict, const void *restrict, int, size_t);
void    *memchr(const void *, int, size_t);
int      memcmp(const void *, const void *, size_t);
void    *memcpy(void *restrict, const void *restrict, size_t);
void    *memmove(void *, const void *, size_t);
void    *memset(void *, int, size_t);
char    *stpcpy(char *restrict, const char *restrict);
char    *stpncpy(char *restrict, const char *restrict, size_t);
char    *strcat(char *restrict, const char *restrict);
char    *strchr(const char *, int);
int      strcmp(const char *, const char *);
int      strcoll(const char *, const char *);
int      strcoll_l(const char *, const char *, locale_t);
char    *strcpy(char *restrict, const char *restrict);
size_t   strcspn(const char *, const char *);
char    *strdup(const char *);
char    *strerror(int);
char    *strerror_l(int, locale_t);
int      strerror_r(int, char *, size_t);
size_t   strlen(const char *);
char    *strncat(char *restrict, const char *restrict, size_t);
int      strncmp(const char *, const char *, size_t);
char    *strncpy(char *restrict, const char *restrict, size_t);
char    *strndup(const char *, size_t);
size_t   strnlen(const char *, size_t);
char    *strpbrk(const char *, const char *);
char    *strrchr(const char *, int);
char    *strsignal(int);
size_t   strspn(const char *, const char *);
char    *strstr(const char *, const char *);
char    *strtok(char *restrict, const char *restrict);
char    *strtok_r(char *restrict, const char *restrict, char **restrict);
size_t   strxfrm(char *restrict, const char *restrict, size_t);
size_t   strxfrm_l(char *restrict, const char *restrict,
             size_t, locale_t);
.fi \fR
.P
.RE
.P
Inclusion of the
.IR <string.h> 
header may also make visible all symbols from
.IR <stddef.h> .
.LP
.IR "The following sections are informative."
.SH "APPLICATION USAGE"
None.
.SH RATIONALE
None.
.SH "FUTURE DIRECTIONS"
None.
.SH "SEE ALSO"
.IR "\fB<locale.h>\fP",
.IR "\fB<stddef.h>\fP",
.IR "\fB<sys_types.h>\fP"
.P
.ad l
The System Interfaces volume of POSIX.1\(hy2008,
.IR "Section 2.2" ", " "The Compilation Environment",
.IR "\fImemccpy\fR\^(\|)",
.IR "\fImemchr\fR\^(\|)",
.IR "\fImemcmp\fR\^(\|)",
.IR "\fImemcpy\fR\^(\|)",
.IR "\fImemmove\fR\^(\|)",
.IR "\fImemset\fR\^(\|)",
.IR "\fIstrcat\fR\^(\|)",
.IR "\fIstrchr\fR\^(\|)",
.IR "\fIstrcmp\fR\^(\|)",
.IR "\fIstrcoll\fR\^(\|)",
.IR "\fIstrcpy\fR\^(\|)",
.IR "\fIstrcspn\fR\^(\|)",
.IR "\fIstrdup\fR\^(\|)",
.IR "\fIstrerror\fR\^(\|)",
.IR "\fIstrlen\fR\^(\|)",
.IR "\fIstrncat\fR\^(\|)",
.IR "\fIstrncmp\fR\^(\|)",
.IR "\fIstrncpy\fR\^(\|)",
.IR "\fIstrpbrk\fR\^(\|)",
.IR "\fIstrrchr\fR\^(\|)",
.IR "\fIstrsignal\fR\^(\|)",
.IR "\fIstrspn\fR\^(\|)",
.IR "\fIstrstr\fR\^(\|)",
.IR "\fIstrtok\fR\^(\|)",
.IR "\fIstrxfrm\fR\^(\|)"
.ad b
.SH COPYRIGHT
Portions of this text are reprinted and reproduced in electronic form
from IEEE Std 1003.1, 2013 Edition, Standard for Information Technology
-- Portable Operating System Interface (POSIX), The Open Group Base
Specifications Issue 7, Copyright (C) 2013 by the Institute of
Electrical and Electronics Engineers, Inc and The Open Group.
(This is POSIX.1-2008 with the 2013 Technical Corrigendum 1 applied.) In the
event of any discrepancy between this version and the original IEEE and
The Open Group Standard, the original IEEE and The Open Group Standard
is the referee document. The original Standard can be obtained online at
http://www.unix.org/online.html .

Any typographical or formatting errors that appear
in this page are most likely
to have been introduced during the conversion of the source files to
man page format. To report such errors, see
https://www.kernel.org/doc/man-pages/reporting_bugs.html .
